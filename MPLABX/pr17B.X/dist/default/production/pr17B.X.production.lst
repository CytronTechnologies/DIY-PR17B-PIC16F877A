

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jul 02 11:14:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103                           
   104                           	psect	idataBANK0
   105  0EC0                     __pidataBANK0:	
   106                           
   107                           ;initializer for _mode
   108  0EC0  341F               	retlw	low (_SPI| (0+32768))
   109  0EC1  3488               	retlw	high (_SPI| (0+32768))
   110  0EC2  3412               	retlw	low (_STD| (0+32768))
   111  0EC3  3488               	retlw	high (_STD| (0+32768))
   112  0EC4  342A               	retlw	low (_ERASE| (0+32768))
   113  0EC5  3488               	retlw	high (_ERASE| (0+32768))
   114  0EC6  3400               	retlw	0
   115  0EC7  3400               	retlw	0
   116                           
   117                           	psect	stringtext
   118  0800                     __pstringtext:	
   119  0800                     stringtab:	
   120  0800                     __stringtab:	
   121                           
   122                           ;	String table - string pointers are 2 bytes each
   123  0800  1BFF               	btfsc	btemp+1,7
   124  0801  280A               	ljmp	stringcode
   125  0802  1383               	bcf	3,7
   126  0803  187F               	btfsc	btemp+1,0
   127  0804  1783               	bsf	3,7
   128  0805  0800               	movf	0,w
   129  0806  0A84               	incf	4,f
   130  0807  1903               	skipnz
   131  0808  0AFF               	incf	btemp+1,f
   132  0809  0008               	return
   133  080A                     stringcode:	
   134  080A  087F               	movf	btemp+1,w
   135  080B  397F               	andlw	127
   136  080C  008A               	movwf	10
   137  080D  0804               	movf	4,w
   138  080E  0A84               	incf	4,f
   139  080F  1903               	skipnz
   140  0810  0AFF               	incf	btemp+1,f
   141  0811  0082               	movwf	2
   142  0812                     __stringbase:	
   143  0812                     __end_of__stringtab:	
   144  0812                     _STD:	
   145  0812  3432               	retlw	50
   146  0813  342E               	retlw	46
   147  0814  3453               	retlw	83
   148  0815  3454               	retlw	84
   149  0816  3441               	retlw	65
   150  0817  344E               	retlw	78
   151  0818  3444               	retlw	68
   152  0819  3441               	retlw	65
   153  081A  344C               	retlw	76
   154  081B  344F               	retlw	79
   155  081C  344E               	retlw	78
   156  081D  3445               	retlw	69
   157  081E  3400               	retlw	0
   158  081F                     __end_of_STD:	
   159  081F                     _SPI:	
   160  081F  3431               	retlw	49
   161  0820  342E               	retlw	46
   162  0821  3453               	retlw	83
   163  0822  3450               	retlw	80
   164  0823  3449               	retlw	73
   165  0824  3420               	retlw	32
   166  0825  344D               	retlw	77
   167  0826  344F               	retlw	79
   168  0827  3444               	retlw	68
   169  0828  3445               	retlw	69
   170  0829  3400               	retlw	0
   171  082A                     __end_of_SPI:	
   172  082A                     _ERASE:	
   173  082A  3433               	retlw	51
   174  082B  342E               	retlw	46
   175  082C  3445               	retlw	69
   176  082D  3452               	retlw	82
   177  082E  3441               	retlw	65
   178  082F  3453               	retlw	83
   179  0830  3445               	retlw	69
   180  0831  3400               	retlw	0
   181  0832                     __end_of_ERASE:	
   182  0005                     _PORTA	set	5
   183  0006                     _PORTB	set	6
   184  0008                     _PORTD	set	8
   185  0009                     _PORTE	set	9
   186  0013                     _SSPBUF	set	19
   187  0001                     _TMR0	set	1
   188  00A4                     _CKP	set	164
   189  0028                     _RA0	set	40
   190  0038                     _RC0	set	56
   191  0043                     _RD3	set	67
   192  0044                     _RD4	set	68
   193  0045                     _RD5	set	69
   194  0046                     _RD6	set	70
   195  0047                     _RD7	set	71
   196  0049                     _RE1	set	73
   197  004A                     _RE2	set	74
   198  00A5                     _SSPEN	set	165
   199  00A0                     _SSPM0	set	160
   200  00A1                     _SSPM1	set	161
   201  00A2                     _SSPM2	set	162
   202  00A3                     _SSPM3	set	163
   203  00A7                     _WCOL	set	167
   204  009F                     _ADCON1	set	159
   205  0085                     _TRISA	set	133
   206  0086                     _TRISB	set	134
   207  0087                     _TRISC	set	135
   208  0088                     _TRISD	set	136
   209  0089                     _TRISE	set	137
   210  04A0                     _BF	set	1184
   211  04A6                     _CKE	set	1190
   212  0408                     _PS0	set	1032
   213  0409                     _PS1	set	1033
   214  040A                     _PS2	set	1034
   215  040B                     _PSA	set	1035
   216  04A7                     _SMP	set	1191
   217  040D                     _T0CS	set	1037
   218  043D                     _TRISC5	set	1085
   219  0832                     __stringdata:	
   220  0832                     STR_24:	
   221  0832  3473               	retlw	115	;'s'
   222  0833  3465               	retlw	101	;'e'
   223  0834  3463               	retlw	99	;'c'
   224  0835  346F               	retlw	111	;'o'
   225  0836  346E               	retlw	110	;'n'
   226  0837  3464               	retlw	100	;'d'
   227  0838  3420               	retlw	32	;' '
   228  0839  346D               	retlw	109	;'m'
   229  083A  3465               	retlw	101	;'e'
   230  083B  3473               	retlw	115	;'s'
   231  083C  3473               	retlw	115	;'s'
   232  083D  3461               	retlw	97	;'a'
   233  083E  3467               	retlw	103	;'g'
   234  083F  3465               	retlw	101	;'e'
   235  0840  342A               	retlw	42	;'*'
   236  0841  342A               	retlw	42	;'*'
   237  0842  3400               	retlw	0
   238  0843                     STR_18:	
   239  0843  3432               	retlw	50	;'2'
   240  0844  342E               	retlw	46	;'.'
   241  0845  3420               	retlw	32	;' '
   242  0846  344D               	retlw	77	;'M'
   243  0847  3449               	retlw	73	;'I'
   244  0848  3443               	retlw	67	;'C'
   245  0849  3420               	retlw	32	;' '
   246  084A  3420               	retlw	32	;' '
   247  084B  3420               	retlw	32	;' '
   248  084C  3420               	retlw	32	;' '
   249  084D  3420               	retlw	32	;' '
   250  084E  3420               	retlw	32	;' '
   251  084F  3420               	retlw	32	;' '
   252  0850  3420               	retlw	32	;' '
   253  0851  3420               	retlw	32	;' '
   254  0852  3400               	retlw	0
   255  0853                     STR_47:	
   256  0853  3431               	retlw	49	;'1'
   257  0854  342E               	retlw	46	;'.'
   258  0855  3420               	retlw	32	;' '
   259  0856  3445               	retlw	69	;'E'
   260  0857  3472               	retlw	114	;'r'
   261  0858  3461               	retlw	97	;'a'
   262  0859  3473               	retlw	115	;'s'
   263  085A  3465               	retlw	101	;'e'
   264  085B  3420               	retlw	32	;' '
   265  085C  3420               	retlw	32	;' '
   266  085D  3420               	retlw	32	;' '
   267  085E  3420               	retlw	32	;' '
   268  085F  3420               	retlw	32	;' '
   269  0860  3420               	retlw	32	;' '
   270  0861  3420               	retlw	32	;' '
   271  0862  3400               	retlw	0
   272  0863                     STR_13:	
   273  0863  3431               	retlw	49	;'1'
   274  0864  342E               	retlw	46	;'.'
   275  0865  3420               	retlw	32	;' '
   276  0866  344D               	retlw	77	;'M'
   277  0867  3465               	retlw	101	;'e'
   278  0868  3473               	retlw	115	;'s'
   279  0869  3473               	retlw	115	;'s'
   280  086A  3461               	retlw	97	;'a'
   281  086B  3467               	retlw	103	;'g'
   282  086C  3465               	retlw	101	;'e'
   283  086D  3420               	retlw	32	;' '
   284  086E  3431               	retlw	49	;'1'
   285  086F  3420               	retlw	32	;' '
   286  0870  3420               	retlw	32	;' '
   287  0871  3420               	retlw	32	;' '
   288  0872  3400               	retlw	0
   289  0873                     STR_21:	
   290  0873  3466               	retlw	102	;'f'
   291  0874  3469               	retlw	105	;'i'
   292  0875  3472               	retlw	114	;'r'
   293  0876  3473               	retlw	115	;'s'
   294  0877  3474               	retlw	116	;'t'
   295  0878  3420               	retlw	32	;' '
   296  0879  346D               	retlw	109	;'m'
   297  087A  3465               	retlw	101	;'e'
   298  087B  3473               	retlw	115	;'s'
   299  087C  3473               	retlw	115	;'s'
   300  087D  3461               	retlw	97	;'a'
   301  087E  3467               	retlw	103	;'g'
   302  087F  3465               	retlw	101	;'e'
   303  0880  342A               	retlw	42	;'*'
   304  0881  342A               	retlw	42	;'*'
   305  0882  3400               	retlw	0
   306  0883                     STR_30:	
   307  0883  342A               	retlw	42	;'*'
   308  0884  342A               	retlw	42	;'*'
   309  0885  3472               	retlw	114	;'r'
   310  0886  3465               	retlw	101	;'e'
   311  0887  3463               	retlw	99	;'c'
   312  0888  346F               	retlw	111	;'o'
   313  0889  3472               	retlw	114	;'r'
   314  088A  3464               	retlw	100	;'d'
   315  088B  3469               	retlw	105	;'i'
   316  088C  346E               	retlw	110	;'n'
   317  088D  3467               	retlw	103	;'g'
   318  088E  3420               	retlw	32	;' '
   319  088F  3474               	retlw	116	;'t'
   320  0890  3468               	retlw	104	;'h'
   321  0891  3465               	retlw	101	;'e'
   322  0892  3400               	retlw	0
   323  0893                     STR_48:	
   324  0893  3432               	retlw	50	;'2'
   325  0894  342E               	retlw	46	;'.'
   326  0895  3420               	retlw	32	;' '
   327  0896  3447               	retlw	71	;'G'
   328  0897  346C               	retlw	108	;'l'
   329  0898  346F               	retlw	111	;'o'
   330  0899  3462               	retlw	98	;'b'
   331  089A  3461               	retlw	97	;'a'
   332  089B  346C               	retlw	108	;'l'
   333  089C  3420               	retlw	32	;' '
   334  089D  3445               	retlw	69	;'E'
   335  089E  3472               	retlw	114	;'r'
   336  089F  3461               	retlw	97	;'a'
   337  08A0  3473               	retlw	115	;'s'
   338  08A1  3465               	retlw	101	;'e'
   339  08A2  3400               	retlw	0
   340  08A3                     STR_17:	
   341  08A3  3431               	retlw	49	;'1'
   342  08A4  342E               	retlw	46	;'.'
   343  08A5  3420               	retlw	32	;' '
   344  08A6  3441               	retlw	65	;'A'
   345  08A7  346E               	retlw	110	;'n'
   346  08A8  3461               	retlw	97	;'a'
   347  08A9  346C               	retlw	108	;'l'
   348  08AA  346F               	retlw	111	;'o'
   349  08AB  3467               	retlw	103	;'g'
   350  08AC  3420               	retlw	32	;' '
   351  08AD  3449               	retlw	73	;'I'
   352  08AE  346E               	retlw	110	;'n'
   353  08AF  3470               	retlw	112	;'p'
   354  08B0  3475               	retlw	117	;'u'
   355  08B1  3474               	retlw	116	;'t'
   356  08B2  3400               	retlw	0
   357  08B3                     STR_51:	
   358  08B3  344D               	retlw	77	;'M'
   359  08B4  3465               	retlw	101	;'e'
   360  08B5  346D               	retlw	109	;'m'
   361  08B6  346F               	retlw	111	;'o'
   362  08B7  3472               	retlw	114	;'r'
   363  08B8  3479               	retlw	121	;'y'
   364  08B9  3420               	retlw	32	;' '
   365  08BA  3443               	retlw	67	;'C'
   366  08BB  346C               	retlw	108	;'l'
   367  08BC  3465               	retlw	101	;'e'
   368  08BD  3461               	retlw	97	;'a'
   369  08BE  3472               	retlw	114	;'r'
   370  08BF  3465               	retlw	101	;'e'
   371  08C0  3464               	retlw	100	;'d'
   372  08C1  3400               	retlw	0
   373  08C2                     STR_43:	
   374  08C2  3473               	retlw	115	;'s'
   375  08C3  3465               	retlw	101	;'e'
   376  08C4  346C               	retlw	108	;'l'
   377  08C5  3465               	retlw	101	;'e'
   378  08C6  3463               	retlw	99	;'c'
   379  08C7  3474               	retlw	116	;'t'
   380  08C8  3420               	retlw	32	;' '
   381  08C9  3474               	retlw	116	;'t'
   382  08CA  346F               	retlw	111	;'o'
   383  08CB  3420               	retlw	32	;' '
   384  08CC  3473               	retlw	115	;'s'
   385  08CD  3474               	retlw	116	;'t'
   386  08CE  346F               	retlw	111	;'o'
   387  08CF  3470               	retlw	112	;'p'
   388  08D0  3400               	retlw	0
   389  08D1                     STR_20:	
   390  08D1  342A               	retlw	42	;'*'
   391  08D2  342A               	retlw	42	;'*'
   392  08D3  3470               	retlw	112	;'p'
   393  08D4  346C               	retlw	108	;'l'
   394  08D5  3461               	retlw	97	;'a'
   395  08D6  3479               	retlw	121	;'y'
   396  08D7  3469               	retlw	105	;'i'
   397  08D8  346E               	retlw	110	;'n'
   398  08D9  3467               	retlw	103	;'g'
   399  08DA  3420               	retlw	32	;' '
   400  08DB  3474               	retlw	116	;'t'
   401  08DC  3468               	retlw	104	;'h'
   402  08DD  3465               	retlw	101	;'e'
   403  08DE  3400               	retlw	0
   404  08DF                     STR_2:	
   405  08DF  3420               	retlw	32	;' '
   406  08E0  3420               	retlw	32	;' '
   407  08E1  3420               	retlw	32	;' '
   408  08E2  3420               	retlw	32	;' '
   409  08E3  3420               	retlw	32	;' '
   410  08E4  3420               	retlw	32	;' '
   411  08E5  3420               	retlw	32	;' '
   412  08E6  3420               	retlw	32	;' '
   413  08E7  3420               	retlw	32	;' '
   414  08E8  3420               	retlw	32	;' '
   415  08E9  3420               	retlw	32	;' '
   416  08EA  3420               	retlw	32	;' '
   417  08EB  3400               	retlw	0
   418  08EC                     STR_27:	
   419  08EC  3431               	retlw	49	;'1'
   420  08ED  342E               	retlw	46	;'.'
   421  08EE  3420               	retlw	32	;' '
   422  08EF  344D               	retlw	77	;'M'
   423  08F0  3465               	retlw	101	;'e'
   424  08F1  3473               	retlw	115	;'s'
   425  08F2  3473               	retlw	115	;'s'
   426  08F3  3461               	retlw	97	;'a'
   427  08F4  3467               	retlw	103	;'g'
   428  08F5  3465               	retlw	101	;'e'
   429  08F6  3420               	retlw	32	;' '
   430  08F7  3431               	retlw	49	;'1'
   431  08F8  3400               	retlw	0
   432  08F9                     STR_14:	
   433  08F9  3432               	retlw	50	;'2'
   434  08FA  342E               	retlw	46	;'.'
   435  08FB  3420               	retlw	32	;' '
   436  08FC  344D               	retlw	77	;'M'
   437  08FD  3465               	retlw	101	;'e'
   438  08FE  3473               	retlw	115	;'s'
   439  08FF  3473               	retlw	115	;'s'
   440  0900  3461               	retlw	97	;'a'
   441  0901  3467               	retlw	103	;'g'
   442  0902  3465               	retlw	101	;'e'
   443  0903  3420               	retlw	32	;' '
   444  0904  3432               	retlw	50	;'2'
   445  0905  3400               	retlw	0
   446  0906                     STR_9:	
   447  0906  3432               	retlw	50	;'2'
   448  0907  342E               	retlw	46	;'.'
   449  0908  3420               	retlw	32	;' '
   450  0909  3450               	retlw	80	;'P'
   451  090A  346C               	retlw	108	;'l'
   452  090B  3461               	retlw	97	;'a'
   453  090C  3479               	retlw	121	;'y'
   454  090D  3420               	retlw	32	;' '
   455  090E  3420               	retlw	32	;' '
   456  090F  3420               	retlw	32	;' '
   457  0910  3420               	retlw	32	;' '
   458  0911  3400               	retlw	0
   459  0912                     STR_37:	
   460  0912  342A               	retlw	42	;'*'
   461  0913  342A               	retlw	42	;'*'
   462  0914  3470               	retlw	112	;'p'
   463  0915  346C               	retlw	108	;'l'
   464  0916  3461               	retlw	97	;'a'
   465  0917  3479               	retlw	121	;'y'
   466  0918  342A               	retlw	42	;'*'
   467  0919  342A               	retlw	42	;'*'
   468  091A  3420               	retlw	32	;' '
   469  091B  3420               	retlw	32	;' '
   470  091C  3420               	retlw	32	;' '
   471  091D  3400               	retlw	0
   472  091E                     STR_10:	
   473  091E  3433               	retlw	51	;'3'
   474  091F  342E               	retlw	46	;'.'
   475  0920  3420               	retlw	32	;' '
   476  0921  3452               	retlw	82	;'R'
   477  0922  3465               	retlw	101	;'e'
   478  0923  3463               	retlw	99	;'c'
   479  0924  346F               	retlw	111	;'o'
   480  0925  3472               	retlw	114	;'r'
   481  0926  3464               	retlw	100	;'d'
   482  0927  3420               	retlw	32	;' '
   483  0928  3420               	retlw	32	;' '
   484  0929  3400               	retlw	0
   485  092A                     STR_11:	
   486  092A  3431               	retlw	49	;'1'
   487  092B  342E               	retlw	46	;'.'
   488  092C  3420               	retlw	32	;' '
   489  092D  3446               	retlw	70	;'F'
   490  092E  346F               	retlw	111	;'o'
   491  092F  3472               	retlw	114	;'r'
   492  0930  3477               	retlw	119	;'w'
   493  0931  3461               	retlw	97	;'a'
   494  0932  3472               	retlw	114	;'r'
   495  0933  3464               	retlw	100	;'d'
   496  0934  3420               	retlw	32	;' '
   497  0935  3400               	retlw	0
   498  0936                     STR_36:	
   499  0936  342A               	retlw	42	;'*'
   500  0937  342A               	retlw	42	;'*'
   501  0938  3466               	retlw	102	;'f'
   502  0939  346F               	retlw	111	;'o'
   503  093A  3472               	retlw	114	;'r'
   504  093B  3477               	retlw	119	;'w'
   505  093C  3461               	retlw	97	;'a'
   506  093D  3472               	retlw	114	;'r'
   507  093E  3464               	retlw	100	;'d'
   508  093F  342A               	retlw	42	;'*'
   509  0940  342A               	retlw	42	;'*'
   510  0941  3400               	retlw	0
   511  0942                     STR_45:	
   512  0942  3472               	retlw	114	;'r'
   513  0943  3465               	retlw	101	;'e'
   514  0944  3463               	retlw	99	;'c'
   515  0945  346F               	retlw	111	;'o'
   516  0946  3472               	retlw	114	;'r'
   517  0947  3464               	retlw	100	;'d'
   518  0948  3469               	retlw	105	;'i'
   519  0949  346E               	retlw	110	;'n'
   520  094A  3467               	retlw	103	;'g'
   521  094B  342A               	retlw	42	;'*'
   522  094C  342A               	retlw	42	;'*'
   523  094D  3400               	retlw	0
   524  094E                     STR_3:	
   525  094E  3453               	retlw	83	;'S'
   526  094F  3477               	retlw	119	;'w'
   527  0950  3469               	retlw	105	;'i'
   528  0951  3474               	retlw	116	;'t'
   529  0952  3463               	retlw	99	;'c'
   530  0953  3468               	retlw	104	;'h'
   531  0954  3420               	retlw	32	;' '
   532  0955  346D               	retlw	109	;'m'
   533  0956  346F               	retlw	111	;'o'
   534  0957  3464               	retlw	100	;'d'
   535  0958  3465               	retlw	101	;'e'
   536  0959  3400               	retlw	0
   537  095A                     STR_1:	
   538  095A  3453               	retlw	83	;'S'
   539  095B  3465               	retlw	101	;'e'
   540  095C  346C               	retlw	108	;'l'
   541  095D  3465               	retlw	101	;'e'
   542  095E  3463               	retlw	99	;'c'
   543  095F  3474               	retlw	116	;'t'
   544  0960  3420               	retlw	32	;' '
   545  0961  346D               	retlw	109	;'m'
   546  0962  346F               	retlw	111	;'o'
   547  0963  3464               	retlw	100	;'d'
   548  0964  3465               	retlw	101	;'e'
   549  0965  3400               	retlw	0
   550  0966                     STR_4:	
   551  0966  3431               	retlw	49	;'1'
   552  0967  342E               	retlw	46	;'.'
   553  0968  3420               	retlw	32	;' '
   554  0969  3450               	retlw	80	;'P'
   555  096A  344C               	retlw	76	;'L'
   556  096B  3441               	retlw	65	;'A'
   557  096C  3459               	retlw	89	;'Y'
   558  096D  3420               	retlw	32	;' '
   559  096E  3420               	retlw	32	;' '
   560  096F  3420               	retlw	32	;' '
   561  0970  3400               	retlw	0
   562  0971                     STR_22:	
   563  0971  342A               	retlw	42	;'*'
   564  0972  342A               	retlw	42	;'*'
   565  0973  342A               	retlw	42	;'*'
   566  0974  3468               	retlw	104	;'h'
   567  0975  3461               	retlw	97	;'a'
   568  0976  346C               	retlw	108	;'l'
   569  0977  3474               	retlw	116	;'t'
   570  0978  342A               	retlw	42	;'*'
   571  0979  342A               	retlw	42	;'*'
   572  097A  342A               	retlw	42	;'*'
   573  097B  3400               	retlw	0
   574  097C                     STR_42:	
   575  097C  342A               	retlw	42	;'*'
   576  097D  342A               	retlw	42	;'*'
   577  097E  3472               	retlw	114	;'r'
   578  097F  3465               	retlw	101	;'e'
   579  0980  3463               	retlw	99	;'c'
   580  0981  346F               	retlw	111	;'o'
   581  0982  3472               	retlw	114	;'r'
   582  0983  3464               	retlw	100	;'d'
   583  0984  342A               	retlw	42	;'*'
   584  0985  342A               	retlw	42	;'*'
   585  0986  3400               	retlw	0
   586  0987                     STR_8:	
   587  0987  3431               	retlw	49	;'1'
   588  0988  342E               	retlw	46	;'.'
   589  0989  3420               	retlw	32	;' '
   590  098A  3446               	retlw	70	;'F'
   591  098B  346F               	retlw	111	;'o'
   592  098C  3472               	retlw	114	;'r'
   593  098D  3477               	retlw	119	;'w'
   594  098E  3461               	retlw	97	;'a'
   595  098F  3472               	retlw	114	;'r'
   596  0990  3464               	retlw	100	;'d'
   597  0991  3400               	retlw	0
   598  0992                     STR_5:	
   599  0992  3432               	retlw	50	;'2'
   600  0993  342E               	retlw	46	;'.'
   601  0994  3420               	retlw	32	;' '
   602  0995  3452               	retlw	82	;'R'
   603  0996  3445               	retlw	69	;'E'
   604  0997  3443               	retlw	67	;'C'
   605  0998  344F               	retlw	79	;'O'
   606  0999  3452               	retlw	82	;'R'
   607  099A  3444               	retlw	68	;'D'
   608  099B  3400               	retlw	0
   609  099C                     STR_46:	
   610  099C  3444               	retlw	68	;'D'
   611  099D  3465               	retlw	101	;'e'
   612  099E  3463               	retlw	99	;'c'
   613  099F  3469               	retlw	105	;'i'
   614  09A0  3473               	retlw	115	;'s'
   615  09A1  3469               	retlw	105	;'i'
   616  09A2  346F               	retlw	111	;'o'
   617  09A3  346E               	retlw	110	;'n'
   618  09A4  3400               	retlw	0
   619  09A5                     STR_12:	
   620  09A5  344C               	retlw	76	;'L'
   621  09A6  346F               	retlw	111	;'o'
   622  09A7  3463               	retlw	99	;'c'
   623  09A8  3461               	retlw	97	;'a'
   624  09A9  3474               	retlw	116	;'t'
   625  09AA  3469               	retlw	105	;'i'
   626  09AB  346F               	retlw	111	;'o'
   627  09AC  346E               	retlw	110	;'n'
   628  09AD  3400               	retlw	0
   629  09AE                     STR_44:	
   630  09AE  342A               	retlw	42	;'*'
   631  09AF  342A               	retlw	42	;'*'
   632  09B0  3473               	retlw	115	;'s'
   633  09B1  3474               	retlw	116	;'t'
   634  09B2  346F               	retlw	111	;'o'
   635  09B3  3470               	retlw	112	;'p'
   636  09B4  3420               	retlw	32	;' '
   637  09B5  3400               	retlw	0
   638  09B6                     STR_50:	
   639  09B6  3445               	retlw	69	;'E'
   640  09B7  3472               	retlw	114	;'r'
   641  09B8  3461               	retlw	97	;'a'
   642  09B9  3473               	retlw	115	;'s'
   643  09BA  3465               	retlw	101	;'e'
   644  09BB  3464               	retlw	100	;'d'
   645  09BC  3400               	retlw	0
   646  09BD                     STR_16:	
   647  09BD  344F               	retlw	79	;'O'
   648  09BE  3470               	retlw	112	;'p'
   649  09BF  3474               	retlw	116	;'t'
   650  09C0  3469               	retlw	105	;'i'
   651  09C1  346F               	retlw	111	;'o'
   652  09C2  346E               	retlw	110	;'n'
   653  09C3  3400               	retlw	0
   654  09C4                     __end_of__stringdata:	
   655                           
   656                           ; #config settings
   657  0000                     
   658                           	psect	cinit
   659  07ED                     start_initialization:	
   660  07ED                     __initialization:	
   661                           
   662                           ; Clear objects allocated to BANK0
   663  07ED  01AD               	clrf	__pbssBANK0& (0+127)
   664  07EE  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   665  07EF  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   666                           
   667                           ; Initialize objects allocated to BANK0
   668  07F0  1383               	bcf	3,7	;select IRP bank0
   669  07F1  3028               	movlw	low (__pdataBANK0+8)
   670  07F2  00FD               	movwf	btemp+-1
   671  07F3  300E               	movlw	high __pidataBANK0
   672  07F4  00FE               	movwf	btemp
   673  07F5  30C0               	movlw	low __pidataBANK0
   674  07F6  00FF               	movwf	btemp+1
   675  07F7  3020               	movlw	low __pdataBANK0
   676  07F8  0084               	movwf	4
   677  07F9  120A  158A  26E8   	fcall	init_ram0
   678  07FC                     end_of_initialization:	
   679                           ;End of C runtime variable initialization code
   680                           
   681  07FC                     __end_of__initialization:	
   682  07FC  0183               	clrf	3
   683  07FD  120A  118A  2DA9   	ljmp	_main	;jump to C main() function
   684                           
   685                           	psect	bssBANK0
   686  002D                     __pbssBANK0:	
   687  002D                     _msg:	
   688  002D                     	ds	1
   689  002E                     _pointer:	
   690  002E                     	ds	1
   691  002F                     _status:	
   692  002F                     	ds	1
   693                           
   694                           	psect	dataBANK0
   695  0020                     __pdataBANK0:	
   696  0020                     _mode:	
   697  0020                     	ds	8
   698                           
   699                           	psect	inittext
   700  0EE4                     init_fetch0:	
   701                           ;	Called with low address in FSR and high address in W
   702                           
   703  0EE4  087E               	movf	126,w
   704  0EE5  008A               	movwf	10
   705  0EE6  087F               	movf	127,w
   706  0EE7  0082               	movwf	2
   707  0EE8                     init_ram0:	
   708                           ;Called with:
   709                           ;	high address of idata address in btemp 
   710                           ;	low address of idata address in btemp+1 
   711                           ;	low address of data in FSR
   712                           ;	high address + 1 of data in btemp-1
   713                           
   714  0EE8  26E4  120A  158A   	fcall	init_fetch0
   715  0EEB  0080               	movwf	0
   716  0EEC  0A84               	incf	4,f
   717  0EED  0804               	movf	4,w
   718  0EEE  067D               	xorwf	125,w
   719  0EEF  1903               	btfsc	3,2
   720  0EF0  3400               	retlw	0
   721  0EF1  0AFF               	incf	127,f
   722  0EF2  1903               	btfsc	3,2
   723  0EF3  0AFE               	incf	126,f
   724  0EF4  2EE8               	goto	init_ram0
   725                           
   726                           	psect	cstackCOMMON
   727  0070                     __pcstackCOMMON:	
   728  0070                     ?_Init:	
   729  0070                     ?_lcd_clr:	
   730                           ; 0 bytes @ 0x0
   731                           
   732  0070                     ?_lcd_goto:	
   733                           ; 0 bytes @ 0x0
   734                           
   735  0070                     ?_Stand:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ?_Erase:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ?_Spi:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ?_send_config:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ?_spi_initialize:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ??_spi_initialize:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ??_uc_send_receive_spi:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ?_tmr_delay:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0070                     ?_e_pulse:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0070                     ?_Record:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  0070                     ?_Play:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  0070                     ?_Play_s:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0070                     ?_Option:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0070                     ?_Forward:	
   775                           ; 0 bytes @ 0x0
   776                           
   777  0070                     ?_message2p:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0070                     ?_message1p:	
   781                           ; 0 bytes @ 0x0
   782                           
   783  0070                     ?_mic:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0070                     ?_analog:	
   787                           ; 0 bytes @ 0x0
   788                           
   789  0070                     ?_message2r:	
   790                           ; 0 bytes @ 0x0
   791                           
   792  0070                     ?_message1r:	
   793                           ; 0 bytes @ 0x0
   794                           
   795  0070                     ?_Record_s:	
   796                           ; 0 bytes @ 0x0
   797                           
   798  0070                     ?_g_erase:	
   799                           ; 0 bytes @ 0x0
   800                           
   801  0070                     ?_erase:	
   802                           ; 0 bytes @ 0x0
   803                           
   804  0070                     ?_main:	
   805                           ; 0 bytes @ 0x0
   806                           
   807  0070                     ?_delay:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  0070                     ?_send_char:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_location:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?_uc_send_receive_spi:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     uc_send_receive_spi@uc_data:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     tmr_delay@lenght:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     delay@data:	
   826                           ; 2 bytes @ 0x0
   827                           
   828                           
   829                           ; 4 bytes @ 0x0
   830  0070                     	ds	2
   831  0072                     ??_tmr_delay:	
   832                           
   833                           ; 0 bytes @ 0x2
   834  0072                     	ds	2
   835  0074                     ??_delay:	
   836                           
   837                           ; 0 bytes @ 0x4
   838  0074                     	ds	4
   839  0078                     ??_send_config:	
   840  0078                     ??_e_pulse:	
   841                           ; 0 bytes @ 0x8
   842                           
   843  0078                     ??_send_char:	
   844                           ; 0 bytes @ 0x8
   845                           
   846  0078                     send_config@data:	
   847                           ; 0 bytes @ 0x8
   848                           
   849  0078                     send_char@data:	
   850                           ; 1 bytes @ 0x8
   851                           
   852                           
   853                           ; 1 bytes @ 0x8
   854  0078                     	ds	1
   855  0079                     ??_Init:	
   856  0079                     ??_lcd_clr:	
   857                           ; 0 bytes @ 0x9
   858                           
   859  0079                     ??_lcd_goto:	
   860                           ; 0 bytes @ 0x9
   861                           
   862  0079                     ?_send_string:	
   863                           ; 0 bytes @ 0x9
   864                           
   865  0079                     send_string@s:	
   866                           ; 0 bytes @ 0x9
   867                           
   868                           
   869                           ; 2 bytes @ 0x9
   870  0079                     	ds	1
   871  007A                     lcd_goto@data:	
   872                           
   873                           ; 1 bytes @ 0xA
   874  007A                     	ds	1
   875  007B                     ??_send_string:	
   876  007B                     ??_Erase:	
   877                           ; 0 bytes @ 0xB
   878                           
   879  007B                     ??_Play:	
   880                           ; 0 bytes @ 0xB
   881                           
   882  007B                     ??_Play_s:	
   883                           ; 0 bytes @ 0xB
   884                           
   885  007B                     ??_Option:	
   886                           ; 0 bytes @ 0xB
   887                           
   888  007B                     ??_Forward:	
   889                           ; 0 bytes @ 0xB
   890                           
   891  007B                     ??_message2p:	
   892                           ; 0 bytes @ 0xB
   893                           
   894  007B                     ??_message1p:	
   895                           ; 0 bytes @ 0xB
   896                           
   897  007B                     ??_message2r:	
   898                           ; 0 bytes @ 0xB
   899                           
   900  007B                     ??_message1r:	
   901                           ; 0 bytes @ 0xB
   902                           
   903  007B                     ??_Record_s:	
   904                           ; 0 bytes @ 0xB
   905                           
   906  007B                     ??_g_erase:	
   907                           ; 0 bytes @ 0xB
   908                           
   909  007B                     ??_erase:	
   910                           ; 0 bytes @ 0xB
   911                           
   912  007B                     ??_location:	
   913                           ; 0 bytes @ 0xB
   914                           
   915                           
   916                           ; 0 bytes @ 0xB
   917  007B                     	ds	1
   918  007C                     Play@i:	
   919  007C                     location@i:	
   920                           ; 1 bytes @ 0xC
   921                           
   922  007C                     Option@i:	
   923                           ; 1 bytes @ 0xC
   924                           
   925  007C                     Erase@i:	
   926                           ; 1 bytes @ 0xC
   927                           
   928                           
   929                           ; 1 bytes @ 0xC
   930  007C                     	ds	1
   931  007D                     ??_Stand:	
   932  007D                     ??_Record:	
   933                           ; 0 bytes @ 0xD
   934                           
   935  007D                     ??_mic:	
   936                           ; 0 bytes @ 0xD
   937                           
   938  007D                     ??_analog:	
   939                           ; 0 bytes @ 0xD
   940                           
   941                           
   942                           ; 0 bytes @ 0xD
   943  007D                     	ds	1
   944                           
   945                           	psect	cstackBANK0
   946  0028                     __pcstackBANK0:	
   947  0028                     Stand@i:	
   948  0028                     Record@i:	
   949                           ; 1 bytes @ 0x0
   950                           
   951                           
   952                           ; 1 bytes @ 0x0
   953  0028                     	ds	1
   954  0029                     ??_Spi:	
   955                           
   956                           ; 0 bytes @ 0x1
   957  0029                     	ds	1
   958  002A                     Spi@i:	
   959                           
   960                           ; 1 bytes @ 0x2
   961  002A                     	ds	1
   962  002B                     ??_main:	
   963                           
   964                           ; 0 bytes @ 0x3
   965  002B                     	ds	1
   966  002C                     main@j:	
   967                           
   968                           ; 1 bytes @ 0x4
   969  002C                     	ds	1
   970                           
   971                           	psect	maintext
   972  05A9                     __pmaintext:	
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   975 ;;
   976 ;; *************** function _main *****************
   977 ;; Defined at:
   978 ;;		line 99 in file "../../source file/PR17B.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  j               1    4[BANK0 ] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 17F/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       1       0       0       0
   994 ;;      Temps:          0       1       0       0       0
   995 ;;      Totals:         0       2       0       0       0
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels required when called:    9
   998 ;; This function calls:
   999 ;;		_Init
  1000 ;;		_lcd_clr
  1001 ;;		_lcd_goto
  1002 ;;		_send_string
  1003 ;;		_Stand
  1004 ;;		_Erase
  1005 ;;		_Spi
  1006 ;; This function is called by:
  1007 ;;		Startup code after reset
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _main
  1013  05A9                     _main:	
  1014                           
  1015                           ;PR17B.c: 100: unsigned char j=0;
  1016                           
  1017                           ;incstack = 0
  1018 ;; hardware stack exceeded
  1019                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1020  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1021  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1022  05AB  01AC               	clrf	main@j
  1023                           
  1024                           ;PR17B.c: 102: Init();
  1025  05AC  120A  118A  2521   	fcall	_Init
      +       120A  118A         
  1026                           
  1027                           ;PR17B.c: 103: lcd_clr();
  1028  05B1  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1029                           
  1030                           ;PR17B.c: 104: lcd_goto(0);
  1031  05B6  3000               	movlw	0
  1032  05B7  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1033                           
  1034                           ;PR17B.c: 105: send_string("Select mode");
  1035  05BC  305A               	movlw	low (STR_1| (0+32768))
  1036  05BD  00F9               	movwf	?_send_string
  1037  05BE  3089               	movlw	high (STR_1| (0+32768))
  1038  05BF  00FA               	movwf	?_send_string+1
  1039  05C0  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1040                           
  1041                           ;PR17B.c: 106: lcd_goto(20);
  1042  05C5  3014               	movlw	20
  1043  05C6  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1044                           
  1045                           ;PR17B.c: 107: send_string(mode[j]);
  1046  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1047  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1048  05CD  082C               	movf	main@j,w
  1049  05CE  00AB               	movwf	??_main
  1050  05CF  072B               	addwf	??_main,w
  1051  05D0  3E20               	addlw	_mode& (0+255)
  1052  05D1  0084               	movwf	4
  1053  05D2  1383               	bcf	3,7	;select IRP bank0
  1054  05D3  0800               	movf	0,w
  1055  05D4  00F9               	movwf	?_send_string
  1056  05D5  0A84               	incf	4,f
  1057  05D6  0800               	movf	0,w
  1058  05D7  00FA               	movwf	?_send_string+1
  1059  05D8  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1060  05DD                     l2068:	
  1061                           ;PR17B.c: 109: while(1)
  1062                           
  1063                           
  1064                           ;PR17B.c: 110: {
  1065                           ;PR17B.c: 111: if( RD5 == 0)
  1066  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1067  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1068  05DF  1A88               	btfsc	8,5	;volatile
  1069  05E0  2E0C               	goto	l2084
  1070  05E1                     l145:	
  1071                           ;PR17B.c: 112: {
  1072                           ;PR17B.c: 113: while(RD5 == 0) continue;
  1073                           
  1074  05E1  1E88               	btfss	8,5	;volatile
  1075  05E2  2DE1               	goto	l145
  1076                           
  1077                           ;PR17B.c: 114: j++;
  1078  05E3  3001               	movlw	1
  1079  05E4  00AB               	movwf	??_main
  1080  05E5  082B               	movf	??_main,w
  1081  05E6  07AC               	addwf	main@j,f
  1082                           
  1083                           ;PR17B.c: 115: if(j>2) j =0;
  1084  05E7  3003               	movlw	3
  1085  05E8  022C               	subwf	main@j,w
  1086  05E9  1803               	btfsc	3,0
  1087  05EA  01AC               	clrf	main@j
  1088                           
  1089                           ;PR17B.c: 116: lcd_goto(20);
  1090  05EB  3014               	movlw	20
  1091  05EC  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1092                           
  1093                           ;PR17B.c: 117: send_string(mode[j]);
  1094  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1095  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1096  05F3  082C               	movf	main@j,w
  1097  05F4  00AB               	movwf	??_main
  1098  05F5  072B               	addwf	??_main,w
  1099  05F6  3E20               	addlw	_mode& (0+255)
  1100  05F7  0084               	movwf	4
  1101  05F8  1383               	bcf	3,7	;select IRP bank0
  1102  05F9  0800               	movf	0,w
  1103  05FA  00F9               	movwf	?_send_string
  1104  05FB  0A84               	incf	4,f
  1105  05FC  0800               	movf	0,w
  1106  05FD  00FA               	movwf	?_send_string+1
  1107  05FE  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1108                           
  1109                           ;PR17B.c: 118: send_string("            ");
  1110  0603  30DF               	movlw	low (STR_2| (0+32768))
  1111  0604  00F9               	movwf	?_send_string
  1112  0605  3088               	movlw	high (STR_2| (0+32768))
  1113  0606  00FA               	movwf	?_send_string+1
  1114  0607  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1115  060C                     l2084:	
  1116                           
  1117                           ;PR17B.c: 119: }
  1118                           ;PR17B.c: 120: if(RD4 == 0)
  1119  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1120  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1121  060E  1A08               	btfsc	8,4	;volatile
  1122  060F  2DDD               	goto	l2068
  1123  0610                     l150:	
  1124                           ;PR17B.c: 121: {
  1125                           ;PR17B.c: 122: while(RD4 == 0)continue;
  1126                           
  1127  0610  1A08               	btfsc	8,4	;volatile
  1128  0611  2E28               	goto	l2096
  1129  0612  2E10               	goto	l150
  1130  0613                     l2088:	
  1131                           ;PR17B.c: 124: {
  1132                           ;PR17B.c: 126: case 1 : Stand();
  1133                           
  1134                           ;PR17B.c: 123: switch(j)
  1135                           
  1136  0613  120A  118A  2753   	fcall	_Stand
      +       120A  118A         
  1137                           
  1138                           ;PR17B.c: 127: break;
  1139  0618  2DDD               	goto	l2068
  1140  0619                     l2090:	
  1141                           ;PR17B.c: 128: case 2 : Erase();
  1142                           
  1143  0619  120A  118A  2135   	fcall	_Erase
      +       120A  118A         
  1144                           
  1145                           ;PR17B.c: 129: break;
  1146  061E  2DDD               	goto	l2068
  1147  061F                     l2092:	
  1148                           ;PR17B.c: 130: default : Spi();
  1149                           
  1150  061F  120A  118A  2631   	fcall	_Spi
      +       120A  118A         
  1151                           
  1152                           ;PR17B.c: 131: j=0;
  1153  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0626  01AC               	clrf	main@j
  1156                           
  1157                           ;PR17B.c: 132: }
  1158  0627  2DDD               	goto	l2068
  1159  0628                     l2096:	
  1160  0628  082C               	movf	main@j,w
  1161                           
  1162                           ; Switch size 1, requested type "space"
  1163                           ; Number of cases is 2, Range of values is 1 to 2
  1164                           ; switch strategies available:
  1165                           ; Name         Instructions Cycles
  1166                           ; simple_byte            7     4 (average)
  1167                           ; direct_byte           17    11 (fixed)
  1168                           ; jumptable            263     9 (fixed)
  1169                           ;	Chosen strategy is simple_byte
  1170  0629  3A01               	xorlw	1	; case 1
  1171  062A  1903               	skipnz
  1172  062B  2E13               	goto	l2088
  1173  062C  3A03               	xorlw	3	; case 2
  1174  062D  1903               	skipnz
  1175  062E  2E19               	goto	l2090
  1176  062F  2E1F               	goto	l2092
  1177  0630  2DDD               	goto	l2068
  1178  0631                     __end_of_main:	
  1179                           
  1180                           	psect	text1
  1181  0631                     __ptext1:	
  1182 ;; *************** function _Spi *****************
  1183 ;; Defined at:
  1184 ;;		line 298 in file "../../source file/PR17B.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  i               1    2[BANK0 ] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;		None               void
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       1       0       0       0
  1200 ;;      Temps:          0       1       0       0       0
  1201 ;;      Totals:         0       2       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    8
  1205 ;; This function calls:
  1206 ;;		_lcd_clr
  1207 ;;		_lcd_goto
  1208 ;;		_send_string
  1209 ;;		_uc_send_receive_spi
  1210 ;;		_tmr_delay
  1211 ;;		_Record
  1212 ;;		_Play
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _Spi
  1220  0631                     _Spi:	
  1221                           
  1222                           ;incstack = 0
  1223 ;; hardware stack exceeded
  1224                           ; Regs used in _Spi: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1225  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0633  01AA               	clrf	Spi@i
  1228  0634  0AAA               	incf	Spi@i,f
  1229                           
  1230                           ;PR17B.c: 299: RE1 = 0;
  1231  0635  1089               	bcf	9,1	;volatile
  1232                           
  1233                           ;PR17B.c: 300: uc_send_receive_spi(0b10000000);
  1234  0636  3080               	movlw	128
  1235  0637  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1236                           
  1237                           ;PR17B.c: 301: uc_send_receive_spi(0b00000000);
  1238  063C  3000               	movlw	0
  1239  063D  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1240                           
  1241                           ;PR17B.c: 302: RE1 = 1;
  1242  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0644  1489               	bsf	9,1	;volatile
  1245                           
  1246                           ;PR17B.c: 303: tmr_delay(10);
  1247  0645  300A               	movlw	10
  1248  0646  00F0               	movwf	?_tmr_delay
  1249  0647  3000               	movlw	0
  1250  0648  00F1               	movwf	?_tmr_delay+1
  1251  0649  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  1252                           
  1253                           ;PR17B.c: 304: RD3 = 1;
  1254  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1255  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0650  1588               	bsf	8,3	;volatile
  1257                           
  1258                           ;PR17B.c: 305: lcd_clr();
  1259  0651  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1260                           
  1261                           ;PR17B.c: 306: lcd_goto(0);
  1262  0656  3000               	movlw	0
  1263  0657  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1264                           
  1265                           ;PR17B.c: 307: send_string("Switch mode");
  1266  065C  304E               	movlw	low (STR_3| (0+32768))
  1267  065D  00F9               	movwf	?_send_string
  1268  065E  3089               	movlw	high (STR_3| (0+32768))
  1269  065F  00FA               	movwf	?_send_string+1
  1270  0660  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1271                           
  1272                           ;PR17B.c: 308: lcd_goto(20);
  1273  0665  3014               	movlw	20
  1274  0666  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1275                           
  1276                           ;PR17B.c: 309: send_string("1. PLAY   ");
  1277  066B  3066               	movlw	low (STR_4| (0+32768))
  1278  066C  00F9               	movwf	?_send_string
  1279  066D  3089               	movlw	high (STR_4| (0+32768))
  1280  066E  00FA               	movwf	?_send_string+1
  1281  066F  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1282  0674                     l2028:	
  1283                           ;PR17B.c: 310: while(1)
  1284                           
  1285                           
  1286                           ;PR17B.c: 311: {
  1287                           ;PR17B.c: 312: if(RD5 == 0)
  1288  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0676  1A88               	btfsc	8,5	;volatile
  1291  0677  2EA4               	goto	l214
  1292  0678                     l215:	
  1293                           ;PR17B.c: 313: {
  1294                           ;PR17B.c: 314: while(RD5 == 0) continue;
  1295                           
  1296  0678  1E88               	btfss	8,5	;volatile
  1297  0679  2E78               	goto	l215
  1298                           
  1299                           ;PR17B.c: 315: i++;
  1300  067A  3001               	movlw	1
  1301  067B  00A9               	movwf	??_Spi
  1302  067C  0829               	movf	??_Spi,w
  1303  067D  07AA               	addwf	Spi@i,f
  1304                           
  1305                           ;PR17B.c: 316: lcd_goto(20);
  1306  067E  3014               	movlw	20
  1307  067F  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1308                           
  1309                           ;PR17B.c: 317: switch (i)
  1310  0684  2E9D               	goto	l2042
  1311  0685                     l2036:	
  1312                           ;PR17B.c: 318: {
  1313                           ;PR17B.c: 319: case 2 : send_string("2. RECORD");
  1314                           
  1315  0685  3092               	movlw	low (STR_5| (0+32768))
  1316  0686  00F9               	movwf	?_send_string
  1317  0687  3089               	movlw	high (STR_5| (0+32768))
  1318  0688  00FA               	movwf	?_send_string+1
  1319  0689  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1320                           
  1321                           ;PR17B.c: 320: break;
  1322  068E  2EA4               	goto	l214
  1323  068F                     l2038:	
  1324                           ;PR17B.c: 322: default: send_string("1. PLAY   ");
  1325                           
  1326  068F  3066               	movlw	low (STR_4| (0+32768))
  1327  0690  00F9               	movwf	?_send_string
  1328  0691  3089               	movlw	high (STR_4| (0+32768))
  1329  0692  00FA               	movwf	?_send_string+1
  1330  0693  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1331                           
  1332                           ;PR17B.c: 323: i =1;
  1333  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1335  069A  01AA               	clrf	Spi@i
  1336  069B  0AAA               	incf	Spi@i,f
  1337                           
  1338                           ;PR17B.c: 324: }
  1339  069C  2EA4               	goto	l214
  1340  069D                     l2042:	
  1341  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1342  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1343  069F  082A               	movf	Spi@i,w
  1344                           
  1345                           ; Switch size 1, requested type "space"
  1346                           ; Number of cases is 1, Range of values is 2 to 2
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte            4     3 (average)
  1350                           ; direct_byte           14    11 (fixed)
  1351                           ; jumptable            263     9 (fixed)
  1352                           ;	Chosen strategy is simple_byte
  1353  06A0  3A02               	xorlw	2	; case 2
  1354  06A1  1903               	skipnz
  1355  06A2  2E85               	goto	l2036
  1356  06A3  2E8F               	goto	l2038
  1357  06A4                     l214:	
  1358                           
  1359                           ;PR17B.c: 325: }
  1360                           ;PR17B.c: 326: if(RD4 == 0)
  1361  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1362  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1363  06A6  1A08               	btfsc	8,4	;volatile
  1364  06A7  2E74               	goto	l2028
  1365  06A8                     l223:	
  1366                           ;PR17B.c: 327: {
  1367                           ;PR17B.c: 328: while(RD4 == 0) continue;
  1368                           
  1369  06A8  1A08               	btfsc	8,4	;volatile
  1370  06A9  2EBB               	goto	l2052
  1371  06AA  2EA8               	goto	l223
  1372  06AB                     l2046:	
  1373                           ;PR17B.c: 330: {
  1374                           ;PR17B.c: 331: case 2 : Record();
  1375                           
  1376                           ;PR17B.c: 329: switch (i)
  1377                           
  1378  06AB  120A  118A  24AD   	fcall	_Record
      +       120A  118A         
  1379                           
  1380                           ;PR17B.c: 332: break;
  1381  06B0  2E74               	goto	l2028
  1382  06B1                     l2048:	
  1383                           ;PR17B.c: 333: default : Play();
  1384                           
  1385  06B1  120A  118A  220D   	fcall	_Play
      +       120A  118A         
  1386                           
  1387                           ;PR17B.c: 334: i = 1;
  1388  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1389  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1390  06B8  01AA               	clrf	Spi@i
  1391  06B9  0AAA               	incf	Spi@i,f
  1392                           
  1393                           ;PR17B.c: 335: }
  1394  06BA  2E74               	goto	l2028
  1395  06BB                     l2052:	
  1396  06BB  082A               	movf	Spi@i,w
  1397                           
  1398                           ; Switch size 1, requested type "space"
  1399                           ; Number of cases is 1, Range of values is 2 to 2
  1400                           ; switch strategies available:
  1401                           ; Name         Instructions Cycles
  1402                           ; simple_byte            4     3 (average)
  1403                           ; direct_byte           14    11 (fixed)
  1404                           ; jumptable            263     9 (fixed)
  1405                           ;	Chosen strategy is simple_byte
  1406  06BC  3A02               	xorlw	2	; case 2
  1407  06BD  1903               	skipnz
  1408  06BE  2EAB               	goto	l2046
  1409  06BF  2EB1               	goto	l2048
  1410  06C0  2E74               	goto	l2028
  1411  06C1                     __end_of_Spi:	
  1412                           
  1413                           	psect	text2
  1414  020D                     __ptext2:	
  1415 ;; *************** function _Play *****************
  1416 ;; Defined at:
  1417 ;;		line 389 in file "../../source file/PR17B.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  i               1   12[COMMON] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0
  1433 ;;      Temps:          1       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    5
  1438 ;; This function calls:
  1439 ;;		_lcd_clr
  1440 ;;		_lcd_goto
  1441 ;;		_send_string
  1442 ;;		_message2p
  1443 ;;		_message1p
  1444 ;; This function is called by:
  1445 ;;		_Spi
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _Play
  1451  020D                     _Play:	
  1452                           
  1453                           ;PR17B.c: 390: char i =1;
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in _Play: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1457  020D  01FC               	clrf	Play@i
  1458  020E  0AFC               	incf	Play@i,f
  1459                           
  1460                           ;PR17B.c: 391: lcd_clr();
  1461  020F  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1462                           
  1463                           ;PR17B.c: 392: lcd_goto(0);
  1464  0214  3000               	movlw	0
  1465  0215  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1466                           
  1467                           ;PR17B.c: 393: send_string("Location");
  1468  021A  30A5               	movlw	low (STR_12| (0+32768))
  1469  021B  00F9               	movwf	?_send_string
  1470  021C  3089               	movlw	high (STR_12| (0+32768))
  1471  021D  00FA               	movwf	?_send_string+1
  1472  021E  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1473                           
  1474                           ;PR17B.c: 394: lcd_goto(20);
  1475  0223  3014               	movlw	20
  1476  0224  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1477                           
  1478                           ;PR17B.c: 395: send_string("1. Message 1   ");
  1479  0229  3063               	movlw	low (STR_13| (0+32768))
  1480  022A  00F9               	movwf	?_send_string
  1481  022B  3088               	movlw	high (STR_13| (0+32768))
  1482  022C  00FA               	movwf	?_send_string+1
  1483  022D  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1484  0232                     l1808:	
  1485                           ;PR17B.c: 396: while(1)
  1486                           
  1487                           
  1488                           ;PR17B.c: 397: {
  1489                           ;PR17B.c: 398: if(RD5 == 0)
  1490  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0234  1A88               	btfsc	8,5	;volatile
  1493  0235  2A5E               	goto	l260
  1494  0236                     l261:	
  1495                           ;PR17B.c: 399: {
  1496                           ;PR17B.c: 400: while(RD5 == 0) continue;
  1497                           
  1498  0236  1E88               	btfss	8,5	;volatile
  1499  0237  2A36               	goto	l261
  1500                           
  1501                           ;PR17B.c: 401: i++;
  1502  0238  3001               	movlw	1
  1503  0239  00FB               	movwf	??_Play
  1504  023A  087B               	movf	??_Play,w
  1505  023B  07FC               	addwf	Play@i,f
  1506                           
  1507                           ;PR17B.c: 402: lcd_goto(20);
  1508  023C  3014               	movlw	20
  1509  023D  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1510                           
  1511                           ;PR17B.c: 403: switch (i)
  1512  0242  2A59               	goto	l1822
  1513  0243                     l1816:	
  1514                           ;PR17B.c: 404: {
  1515                           ;PR17B.c: 405: case 2 : send_string("2. Message 2");
  1516                           
  1517  0243  30F9               	movlw	low (STR_14| (0+32768))
  1518  0244  00F9               	movwf	?_send_string
  1519  0245  3088               	movlw	high (STR_14| (0+32768))
  1520  0246  00FA               	movwf	?_send_string+1
  1521  0247  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1522                           
  1523                           ;PR17B.c: 406: break;
  1524  024C  2A5E               	goto	l260
  1525  024D                     l1818:	
  1526                           ;PR17B.c: 408: default: send_string("1. Message 1   ");
  1527                           
  1528  024D  3063               	movlw	low (STR_13| (0+32768))
  1529  024E  00F9               	movwf	?_send_string
  1530  024F  3088               	movlw	high (STR_13| (0+32768))
  1531  0250  00FA               	movwf	?_send_string+1
  1532  0251  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1533                           
  1534                           ;PR17B.c: 409: i =1;
  1535  0256  01FC               	clrf	Play@i
  1536  0257  0AFC               	incf	Play@i,f
  1537                           
  1538                           ;PR17B.c: 410: }
  1539  0258  2A5E               	goto	l260
  1540  0259                     l1822:	
  1541  0259  087C               	movf	Play@i,w
  1542                           
  1543                           ; Switch size 1, requested type "space"
  1544                           ; Number of cases is 1, Range of values is 2 to 2
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            4     3 (average)
  1548                           ; direct_byte           14    11 (fixed)
  1549                           ; jumptable            263     9 (fixed)
  1550                           ;	Chosen strategy is simple_byte
  1551  025A  3A02               	xorlw	2	; case 2
  1552  025B  1903               	skipnz
  1553  025C  2A43               	goto	l1816
  1554  025D  2A4D               	goto	l1818
  1555  025E                     l260:	
  1556                           
  1557                           ;PR17B.c: 411: }
  1558                           ;PR17B.c: 412: if(RD4 == 0)
  1559  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1560  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0260  1A08               	btfsc	8,4	;volatile
  1562  0261  2A32               	goto	l1808
  1563  0262                     l269:	
  1564                           ;PR17B.c: 413: {
  1565                           ;PR17B.c: 414: while(RD4 == 0) continue;
  1566                           
  1567  0262  1A08               	btfsc	8,4	;volatile
  1568  0263  2A73               	goto	l1832
  1569  0264  2A62               	goto	l269
  1570  0265                     l1826:	
  1571                           ;PR17B.c: 416: {
  1572                           ;PR17B.c: 417: case 2 : message2p();
  1573                           
  1574                           ;PR17B.c: 415: switch (i)
  1575                           
  1576  0265  120A  118A  2279   	fcall	_message2p
      +       120A  118A         
  1577                           
  1578                           ;PR17B.c: 418: break;
  1579  026A  2A32               	goto	l1808
  1580  026B                     l1828:	
  1581                           ;PR17B.c: 419: default : message1p();
  1582                           
  1583  026B  120A  118A  22E8   	fcall	_message1p
      +       120A  118A         
  1584                           
  1585                           ;PR17B.c: 420: i = 1;
  1586  0270  01FC               	clrf	Play@i
  1587  0271  0AFC               	incf	Play@i,f
  1588                           
  1589                           ;PR17B.c: 421: }
  1590  0272  2A32               	goto	l1808
  1591  0273                     l1832:	
  1592  0273  087C               	movf	Play@i,w
  1593                           
  1594                           ; Switch size 1, requested type "space"
  1595                           ; Number of cases is 1, Range of values is 2 to 2
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte            4     3 (average)
  1599                           ; direct_byte           14    11 (fixed)
  1600                           ; jumptable            263     9 (fixed)
  1601                           ;	Chosen strategy is simple_byte
  1602  0274  3A02               	xorlw	2	; case 2
  1603  0275  1903               	skipnz
  1604  0276  2A65               	goto	l1826
  1605  0277  2A6B               	goto	l1828
  1606  0278  2A32               	goto	l1808
  1607  0279                     __end_of_Play:	
  1608                           
  1609                           	psect	text3
  1610  02E8                     __ptext3:	
  1611 ;; *************** function _message1p *****************
  1612 ;; Defined at:
  1613 ;;		line 466 in file "../../source file/PR17B.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0
  1630 ;;      Totals:         0       0       0       0       0
  1631 ;;Total ram usage:        0 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    4
  1634 ;; This function calls:
  1635 ;;		_lcd_clr
  1636 ;;		_lcd_goto
  1637 ;;		_send_string
  1638 ;;		_uc_send_receive_spi
  1639 ;;		_tmr_delay
  1640 ;; This function is called by:
  1641 ;;		_Play
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _message1p
  1647  02E8                     _message1p:	
  1648                           
  1649                           ;PR17B.c: 467: RE1 = 0;
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _message1p: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1653  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1654  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1655  02EA  1089               	bcf	9,1	;volatile
  1656                           
  1657                           ;PR17B.c: 468: uc_send_receive_spi(0b00000001);
  1658  02EB  3001               	movlw	1
  1659  02EC  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1660                           
  1661                           ;PR17B.c: 469: uc_send_receive_spi(0b00000000);
  1662  02F1  3000               	movlw	0
  1663  02F2  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1664                           
  1665                           ;PR17B.c: 470: uc_send_receive_spi(0b00001000);
  1666  02F7  3008               	movlw	8
  1667  02F8  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1668                           
  1669                           ;PR17B.c: 471: uc_send_receive_spi(0b00000000);
  1670  02FD  3000               	movlw	0
  1671  02FE  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1672                           
  1673                           ;PR17B.c: 472: uc_send_receive_spi(0b01101110);
  1674  0303  306E               	movlw	110
  1675  0304  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1676                           
  1677                           ;PR17B.c: 473: uc_send_receive_spi(0b10000000);
  1678  0309  3080               	movlw	128
  1679  030A  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1680                           
  1681                           ;PR17B.c: 474: uc_send_receive_spi(0b00000000);
  1682  030F  3000               	movlw	0
  1683  0310  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1684                           
  1685                           ;PR17B.c: 475: RE1 = 1;
  1686  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0317  1489               	bsf	9,1	;volatile
  1689                           
  1690                           ;PR17B.c: 476: lcd_clr();
  1691  0318  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1692                           
  1693                           ;PR17B.c: 477: lcd_goto(0);
  1694  031D  3000               	movlw	0
  1695  031E  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1696                           
  1697                           ;PR17B.c: 478: send_string("**playing the");
  1698  0323  30D1               	movlw	low (STR_20| (0+32768))
  1699  0324  00F9               	movwf	?_send_string
  1700  0325  3088               	movlw	high (STR_20| (0+32768))
  1701  0326  00FA               	movwf	?_send_string+1
  1702  0327  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1703                           
  1704                           ;PR17B.c: 479: lcd_goto(20);
  1705  032C  3014               	movlw	20
  1706  032D  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1707                           
  1708                           ;PR17B.c: 480: send_string("first message**");
  1709  0332  3073               	movlw	low (STR_21| (0+32768))
  1710  0333  00F9               	movwf	?_send_string
  1711  0334  3088               	movlw	high (STR_21| (0+32768))
  1712  0335  00FA               	movwf	?_send_string+1
  1713  0336  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1714                           
  1715                           ;PR17B.c: 481: tmr_delay(4600);
  1716  033B  30F8               	movlw	248
  1717  033C  00F0               	movwf	?_tmr_delay
  1718  033D  3011               	movlw	17
  1719  033E  00F1               	movwf	?_tmr_delay+1
  1720  033F  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  1721                           
  1722                           ;PR17B.c: 482: lcd_clr();
  1723  0344  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1724                           
  1725                           ;PR17B.c: 483: lcd_goto(0);
  1726  0349  3000               	movlw	0
  1727  034A  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1728                           
  1729                           ;PR17B.c: 484: send_string("***halt***");
  1730  034F  3071               	movlw	low (STR_22| (0+32768))
  1731  0350  00F9               	movwf	?_send_string
  1732  0351  3089               	movlw	high (STR_22| (0+32768))
  1733  0352  00FA               	movwf	?_send_string+1
  1734  0353  120A  158A  27D9   	fcall	_send_string
  1735  0356  0008               	return
  1736  0357                     __end_of_message1p:	
  1737                           
  1738                           	psect	text4
  1739  0279                     __ptext4:	
  1740 ;; *************** function _message2p *****************
  1741 ;; Defined at:
  1742 ;;		line 488 in file "../../source file/PR17B.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    4
  1763 ;; This function calls:
  1764 ;;		_lcd_clr
  1765 ;;		_lcd_goto
  1766 ;;		_send_string
  1767 ;;		_uc_send_receive_spi
  1768 ;;		_tmr_delay
  1769 ;; This function is called by:
  1770 ;;		_Play
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _message2p
  1776  0279                     _message2p:	
  1777                           
  1778                           ;PR17B.c: 489: RE1 = 0;
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _message2p: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1782  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1783  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1784  027B  1089               	bcf	9,1	;volatile
  1785                           
  1786                           ;PR17B.c: 490: uc_send_receive_spi(0b00000001);
  1787  027C  3001               	movlw	1
  1788  027D  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1789                           
  1790                           ;PR17B.c: 491: uc_send_receive_spi(0b00000000);
  1791  0282  3000               	movlw	0
  1792  0283  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1793                           
  1794                           ;PR17B.c: 492: uc_send_receive_spi(0b11101110);
  1795  0288  30EE               	movlw	238
  1796  0289  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1797                           
  1798                           ;PR17B.c: 493: uc_send_receive_spi(0b10000000);
  1799  028E  3080               	movlw	128
  1800  028F  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1801                           
  1802                           ;PR17B.c: 494: uc_send_receive_spi(0b10111011);
  1803  0294  30BB               	movlw	187
  1804  0295  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1805                           
  1806                           ;PR17B.c: 495: uc_send_receive_spi(0b01000000);
  1807  029A  3040               	movlw	64
  1808  029B  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1809                           
  1810                           ;PR17B.c: 496: uc_send_receive_spi(0b00000000);
  1811  02A0  3000               	movlw	0
  1812  02A1  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  1813                           
  1814                           ;PR17B.c: 497: RE1 = 1;
  1815  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1816  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1817  02A8  1489               	bsf	9,1	;volatile
  1818                           
  1819                           ;PR17B.c: 498: lcd_clr();
  1820  02A9  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1821                           
  1822                           ;PR17B.c: 499: lcd_goto(0);
  1823  02AE  3000               	movlw	0
  1824  02AF  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1825                           
  1826                           ;PR17B.c: 500: send_string("**playing the");
  1827  02B4  30D1               	movlw	low (STR_20| (0+32768))
  1828  02B5  00F9               	movwf	?_send_string
  1829  02B6  3088               	movlw	high (STR_20| (0+32768))
  1830  02B7  00FA               	movwf	?_send_string+1
  1831  02B8  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1832                           
  1833                           ;PR17B.c: 501: lcd_goto(20);
  1834  02BD  3014               	movlw	20
  1835  02BE  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1836                           
  1837                           ;PR17B.c: 502: send_string("second message**");
  1838  02C3  3032               	movlw	low (STR_24| (0+32768))
  1839  02C4  00F9               	movwf	?_send_string
  1840  02C5  3088               	movlw	high (STR_24| (0+32768))
  1841  02C6  00FA               	movwf	?_send_string+1
  1842  02C7  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1843                           
  1844                           ;PR17B.c: 503: tmr_delay(4600);
  1845  02CC  30F8               	movlw	248
  1846  02CD  00F0               	movwf	?_tmr_delay
  1847  02CE  3011               	movlw	17
  1848  02CF  00F1               	movwf	?_tmr_delay+1
  1849  02D0  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  1850                           
  1851                           ;PR17B.c: 504: lcd_clr();
  1852  02D5  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1853                           
  1854                           ;PR17B.c: 505: lcd_goto(0);
  1855  02DA  3000               	movlw	0
  1856  02DB  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1857                           
  1858                           ;PR17B.c: 506: send_string("***halt***");
  1859  02E0  3071               	movlw	low (STR_22| (0+32768))
  1860  02E1  00F9               	movwf	?_send_string
  1861  02E2  3089               	movlw	high (STR_22| (0+32768))
  1862  02E3  00FA               	movwf	?_send_string+1
  1863  02E4  120A  158A  27D9   	fcall	_send_string
  1864  02E7  0008               	return
  1865  02E8                     __end_of_message2p:	
  1866                           
  1867                           	psect	text5
  1868  04AD                     __ptext5:	
  1869 ;; *************** function _Record *****************
  1870 ;; Defined at:
  1871 ;;		line 428 in file "../../source file/PR17B.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  i               1    0[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;		None               void
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       1       0       0       0
  1887 ;;      Temps:          1       0       0       0       0
  1888 ;;      Totals:         1       1       0       0       0
  1889 ;;Total ram usage:        2 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    7
  1892 ;; This function calls:
  1893 ;;		_lcd_clr
  1894 ;;		_lcd_goto
  1895 ;;		_send_string
  1896 ;;		_mic
  1897 ;;		_analog
  1898 ;; This function is called by:
  1899 ;;		_Spi
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _Record
  1905  04AD                     _Record:	
  1906                           
  1907                           ;PR17B.c: 429: char i =1;
  1908                           
  1909                           ;incstack = 0
  1910 ;; hardware stack exceeded
  1911                           ; Regs used in _Record: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1912  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1913  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1914  04AF  01A8               	clrf	Record@i
  1915  04B0  0AA8               	incf	Record@i,f
  1916                           
  1917                           ;PR17B.c: 430: lcd_clr();
  1918  04B1  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  1919                           
  1920                           ;PR17B.c: 431: lcd_goto(0);
  1921  04B6  3000               	movlw	0
  1922  04B7  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1923                           
  1924                           ;PR17B.c: 432: send_string("Option");
  1925  04BC  30BD               	movlw	low (STR_16| (0+32768))
  1926  04BD  00F9               	movwf	?_send_string
  1927  04BE  3089               	movlw	high (STR_16| (0+32768))
  1928  04BF  00FA               	movwf	?_send_string+1
  1929  04C0  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1930                           
  1931                           ;PR17B.c: 433: lcd_goto(20);
  1932  04C5  3014               	movlw	20
  1933  04C6  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1934                           
  1935                           ;PR17B.c: 434: send_string("1. Analog Input");
  1936  04CB  30A3               	movlw	low (STR_17| (0+32768))
  1937  04CC  00F9               	movwf	?_send_string
  1938  04CD  3088               	movlw	high (STR_17| (0+32768))
  1939  04CE  00FA               	movwf	?_send_string+1
  1940  04CF  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1941  04D4                     l1990:	
  1942                           ;PR17B.c: 435: while(1)
  1943                           
  1944                           
  1945                           ;PR17B.c: 436: {
  1946                           ;PR17B.c: 437: if(RD5 == 0)
  1947  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1948  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1949  04D6  1A88               	btfsc	8,5	;volatile
  1950  04D7  2D04               	goto	l282
  1951  04D8                     l283:	
  1952                           ;PR17B.c: 438: {
  1953                           ;PR17B.c: 439: while(RD5 == 0) continue;
  1954                           
  1955  04D8  1E88               	btfss	8,5	;volatile
  1956  04D9  2CD8               	goto	l283
  1957                           
  1958                           ;PR17B.c: 440: i++;
  1959  04DA  3001               	movlw	1
  1960  04DB  00FD               	movwf	??_Record
  1961  04DC  087D               	movf	??_Record,w
  1962  04DD  07A8               	addwf	Record@i,f
  1963                           
  1964                           ;PR17B.c: 441: lcd_goto(20);
  1965  04DE  3014               	movlw	20
  1966  04DF  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  1967                           
  1968                           ;PR17B.c: 442: switch (i)
  1969  04E4  2CFD               	goto	l2004
  1970  04E5                     l1998:	
  1971                           ;PR17B.c: 443: {
  1972                           ;PR17B.c: 444: case 2 : send_string("2. MIC         ");
  1973                           
  1974  04E5  3043               	movlw	low (STR_18| (0+32768))
  1975  04E6  00F9               	movwf	?_send_string
  1976  04E7  3088               	movlw	high (STR_18| (0+32768))
  1977  04E8  00FA               	movwf	?_send_string+1
  1978  04E9  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1979                           
  1980                           ;PR17B.c: 445: break;
  1981  04EE  2D04               	goto	l282
  1982  04EF                     l2000:	
  1983                           ;PR17B.c: 446: default: send_string("1. Analog Input");
  1984                           
  1985  04EF  30A3               	movlw	low (STR_17| (0+32768))
  1986  04F0  00F9               	movwf	?_send_string
  1987  04F1  3088               	movlw	high (STR_17| (0+32768))
  1988  04F2  00FA               	movwf	?_send_string+1
  1989  04F3  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  1990                           
  1991                           ;PR17B.c: 447: i =1;
  1992  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1993  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1994  04FA  01A8               	clrf	Record@i
  1995  04FB  0AA8               	incf	Record@i,f
  1996                           
  1997                           ;PR17B.c: 448: }
  1998  04FC  2D04               	goto	l282
  1999  04FD                     l2004:	
  2000  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2001  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2002  04FF  0828               	movf	Record@i,w
  2003                           
  2004                           ; Switch size 1, requested type "space"
  2005                           ; Number of cases is 1, Range of values is 2 to 2
  2006                           ; switch strategies available:
  2007                           ; Name         Instructions Cycles
  2008                           ; simple_byte            4     3 (average)
  2009                           ; direct_byte           14    11 (fixed)
  2010                           ; jumptable            263     9 (fixed)
  2011                           ;	Chosen strategy is simple_byte
  2012  0500  3A02               	xorlw	2	; case 2
  2013  0501  1903               	skipnz
  2014  0502  2CE5               	goto	l1998
  2015  0503  2CEF               	goto	l2000
  2016  0504                     l282:	
  2017                           
  2018                           ;PR17B.c: 449: }
  2019                           ;PR17B.c: 450: if(RD4 == 0)
  2020  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0506  1A08               	btfsc	8,4	;volatile
  2023  0507  2CD4               	goto	l1990
  2024  0508                     l291:	
  2025                           ;PR17B.c: 451: {
  2026                           ;PR17B.c: 452: while(RD4 == 0) continue;
  2027                           
  2028  0508  1A08               	btfsc	8,4	;volatile
  2029  0509  2D1B               	goto	l2014
  2030  050A  2D08               	goto	l291
  2031  050B                     l2008:	
  2032                           ;PR17B.c: 454: {
  2033                           ;PR17B.c: 455: case 2 : mic();
  2034                           
  2035                           ;PR17B.c: 453: switch (i)
  2036                           
  2037  050B  120A  118A  2009   	fcall	_mic
      +       120A  118A         
  2038                           
  2039                           ;PR17B.c: 456: break;
  2040  0510  2CD4               	goto	l1990
  2041  0511                     l2010:	
  2042                           ;PR17B.c: 457: default : analog();
  2043                           
  2044  0511  120A  118A  26C1   	fcall	_analog
      +       120A  118A         
  2045                           
  2046                           ;PR17B.c: 458: i = 1;
  2047  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0518  01A8               	clrf	Record@i
  2050  0519  0AA8               	incf	Record@i,f
  2051                           
  2052                           ;PR17B.c: 459: }
  2053  051A  2CD4               	goto	l1990
  2054  051B                     l2014:	
  2055  051B  0828               	movf	Record@i,w
  2056                           
  2057                           ; Switch size 1, requested type "space"
  2058                           ; Number of cases is 1, Range of values is 2 to 2
  2059                           ; switch strategies available:
  2060                           ; Name         Instructions Cycles
  2061                           ; simple_byte            4     3 (average)
  2062                           ; direct_byte           14    11 (fixed)
  2063                           ; jumptable            263     9 (fixed)
  2064                           ;	Chosen strategy is simple_byte
  2065  051C  3A02               	xorlw	2	; case 2
  2066  051D  1903               	skipnz
  2067  051E  2D0B               	goto	l2008
  2068  051F  2D11               	goto	l2010
  2069  0520  2CD4               	goto	l1990
  2070  0521                     __end_of_Record:	
  2071                           
  2072                           	psect	text6
  2073  06C1                     __ptext6:	
  2074 ;; *************** function _analog *****************
  2075 ;; Defined at:
  2076 ;;		line 596 in file "../../source file/PR17B.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2090 ;;      Params:         0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    6
  2097 ;; This function calls:
  2098 ;;		_uc_send_receive_spi
  2099 ;;		_tmr_delay
  2100 ;;		_location
  2101 ;; This function is called by:
  2102 ;;		_Record
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _analog
  2108  06C1                     _analog:	
  2109                           
  2110                           ;PR17B.c: 597: RE1 = 0;
  2111                           
  2112                           ;incstack = 0
  2113 ;; hardware stack exceeded
  2114                           ; Regs used in _analog: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2115  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2116  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2117  06C3  1089               	bcf	9,1	;volatile
  2118                           
  2119                           ;PR17B.c: 598: uc_send_receive_spi(0b11100000);
  2120  06C4  30E0               	movlw	224
  2121  06C5  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2122                           
  2123                           ;PR17B.c: 599: uc_send_receive_spi(0b00000000);
  2124  06CA  3000               	movlw	0
  2125  06CB  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2126                           
  2127                           ;PR17B.c: 600: RE1 = 1;
  2128  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  2129  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  2130  06D2  1489               	bsf	9,1	;volatile
  2131                           
  2132                           ;PR17B.c: 601: tmr_delay(10);
  2133  06D3  300A               	movlw	10
  2134  06D4  00F0               	movwf	?_tmr_delay
  2135  06D5  3000               	movlw	0
  2136  06D6  00F1               	movwf	?_tmr_delay+1
  2137  06D7  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2138                           
  2139                           ;PR17B.c: 603: RE1 = 0;
  2140  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2141  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2142  06DE  1089               	bcf	9,1	;volatile
  2143                           
  2144                           ;PR17B.c: 604: uc_send_receive_spi(0b00100000);
  2145  06DF  3020               	movlw	32
  2146  06E0  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2147                           
  2148                           ;PR17B.c: 605: uc_send_receive_spi(0b00000000);
  2149  06E5  3000               	movlw	0
  2150  06E6  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2151                           
  2152                           ;PR17B.c: 606: RE1 = 1;
  2153  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2154  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2155  06ED  1489               	bsf	9,1	;volatile
  2156                           
  2157                           ;PR17B.c: 608: tmr_delay(10);
  2158  06EE  300A               	movlw	10
  2159  06EF  00F0               	movwf	?_tmr_delay
  2160  06F0  3000               	movlw	0
  2161  06F1  00F1               	movwf	?_tmr_delay+1
  2162  06F2  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2163                           
  2164                           ;PR17B.c: 610: RE1 = 0;
  2165  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2166  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2167  06F9  1089               	bcf	9,1	;volatile
  2168                           
  2169                           ;PR17B.c: 611: uc_send_receive_spi(0b10000000);
  2170  06FA  3080               	movlw	128
  2171  06FB  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2172                           
  2173                           ;PR17B.c: 612: uc_send_receive_spi(0b00000000);
  2174  0700  3000               	movlw	0
  2175  0701  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2176                           
  2177                           ;PR17B.c: 613: RE1 = 1;
  2178  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0708  1489               	bsf	9,1	;volatile
  2181                           
  2182                           ;PR17B.c: 614: tmr_delay(10);
  2183  0709  300A               	movlw	10
  2184  070A  00F0               	movwf	?_tmr_delay
  2185  070B  3000               	movlw	0
  2186  070C  00F1               	movwf	?_tmr_delay+1
  2187  070D  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2188                           
  2189                           ;PR17B.c: 616: RD3 = 0;
  2190  0712  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0713  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0714  1188               	bcf	8,3	;volatile
  2193                           
  2194                           ;PR17B.c: 618: RE1 = 0;
  2195  0715  1089               	bcf	9,1	;volatile
  2196                           
  2197                           ;PR17B.c: 619: uc_send_receive_spi(0b00100000);
  2198  0716  3020               	movlw	32
  2199  0717  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2200                           
  2201                           ;PR17B.c: 620: uc_send_receive_spi(0b00000000);
  2202  071C  3000               	movlw	0
  2203  071D  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2204                           
  2205                           ;PR17B.c: 621: RE1 = 1;
  2206  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0724  1489               	bsf	9,1	;volatile
  2209                           
  2210                           ;PR17B.c: 623: tmr_delay(10);
  2211  0725  300A               	movlw	10
  2212  0726  00F0               	movwf	?_tmr_delay
  2213  0727  3000               	movlw	0
  2214  0728  00F1               	movwf	?_tmr_delay+1
  2215  0729  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2216                           
  2217                           ;PR17B.c: 626: RE1 = 0;
  2218  072E  1283               	bcf	3,5	;RP0=0, select bank0
  2219  072F  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0730  1089               	bcf	9,1	;volatile
  2221                           
  2222                           ;PR17B.c: 627: uc_send_receive_spi(0b10100010);
  2223  0731  30A2               	movlw	162
  2224  0732  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2225                           
  2226                           ;PR17B.c: 628: uc_send_receive_spi(0b00000000);
  2227  0737  3000               	movlw	0
  2228  0738  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2229                           
  2230                           ;PR17B.c: 629: uc_send_receive_spi(0b00100000);
  2231  073D  3020               	movlw	32
  2232  073E  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2233                           
  2234                           ;PR17B.c: 630: RE1 = 1;
  2235  0743  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0744  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0745  1489               	bsf	9,1	;volatile
  2238                           
  2239                           ;PR17B.c: 632: tmr_delay(10);
  2240  0746  300A               	movlw	10
  2241  0747  00F0               	movwf	?_tmr_delay
  2242  0748  3000               	movlw	0
  2243  0749  00F1               	movwf	?_tmr_delay+1
  2244  074A  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2245                           
  2246                           ;PR17B.c: 634: location();
  2247  074F  120A  118A  21A1   	fcall	_location
  2248  0752  0008               	return
  2249  0753                     __end_of_analog:	
  2250                           
  2251                           	psect	text7
  2252  0009                     __ptext7:	
  2253 ;; *************** function _mic *****************
  2254 ;; Defined at:
  2255 ;;		line 638 in file "../../source file/PR17B.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;		None               void
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    6
  2276 ;; This function calls:
  2277 ;;		_uc_send_receive_spi
  2278 ;;		_tmr_delay
  2279 ;;		_location
  2280 ;; This function is called by:
  2281 ;;		_Record
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _mic
  2287  0009                     _mic:	
  2288                           
  2289                           ;PR17B.c: 639: RE1 = 0;
  2290                           
  2291                           ;incstack = 0
  2292 ;; hardware stack exceeded
  2293                           ; Regs used in _mic: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2294  0009  1283               	bcf	3,5	;RP0=0, select bank0
  2295  000A  1303               	bcf	3,6	;RP1=0, select bank0
  2296  000B  1089               	bcf	9,1	;volatile
  2297                           
  2298                           ;PR17B.c: 640: uc_send_receive_spi(0b11100000);
  2299  000C  30E0               	movlw	224
  2300  000D  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2301                           
  2302                           ;PR17B.c: 641: uc_send_receive_spi(0b00000000);
  2303  0012  3000               	movlw	0
  2304  0013  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2305                           
  2306                           ;PR17B.c: 642: RE1 = 1;
  2307  0018  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0019  1303               	bcf	3,6	;RP1=0, select bank0
  2309  001A  1489               	bsf	9,1	;volatile
  2310                           
  2311                           ;PR17B.c: 643: tmr_delay(10);
  2312  001B  300A               	movlw	10
  2313  001C  00F0               	movwf	?_tmr_delay
  2314  001D  3000               	movlw	0
  2315  001E  00F1               	movwf	?_tmr_delay+1
  2316  001F  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2317                           
  2318                           ;PR17B.c: 645: RE1 = 0;
  2319  0024  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0025  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0026  1089               	bcf	9,1	;volatile
  2322                           
  2323                           ;PR17B.c: 646: uc_send_receive_spi(0b10000000);
  2324  0027  3080               	movlw	128
  2325  0028  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2326                           
  2327                           ;PR17B.c: 647: uc_send_receive_spi(0b00000000);
  2328  002D  3000               	movlw	0
  2329  002E  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2330                           
  2331                           ;PR17B.c: 648: RE1 = 1;
  2332  0033  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0034  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0035  1489               	bsf	9,1	;volatile
  2335                           
  2336                           ;PR17B.c: 649: tmr_delay(10);
  2337  0036  300A               	movlw	10
  2338  0037  00F0               	movwf	?_tmr_delay
  2339  0038  3000               	movlw	0
  2340  0039  00F1               	movwf	?_tmr_delay+1
  2341  003A  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2342                           
  2343                           ;PR17B.c: 651: RD3 = 1;
  2344  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2345  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0041  1588               	bsf	8,3	;volatile
  2347                           
  2348                           ;PR17B.c: 652: location();
  2349  0042  120A  118A  21A1   	fcall	_location
  2350  0045  0008               	return
  2351  0046                     __end_of_mic:	
  2352                           
  2353                           	psect	text8
  2354  01A1                     __ptext8:	
  2355 ;; *************** function _location *****************
  2356 ;; Defined at:
  2357 ;;		line 510 in file "../../source file/PR17B.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  i               1   12[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;		None               void
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         1       0       0       0       0
  2373 ;;      Temps:          1       0       0       0       0
  2374 ;;      Totals:         2       0       0       0       0
  2375 ;;Total ram usage:        2 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    5
  2378 ;; This function calls:
  2379 ;;		_lcd_clr
  2380 ;;		_lcd_goto
  2381 ;;		_send_string
  2382 ;;		_message2r
  2383 ;;		_message1r
  2384 ;; This function is called by:
  2385 ;;		_analog
  2386 ;;		_mic
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _location
  2392  01A1                     _location:	
  2393                           
  2394                           ;PR17B.c: 512: char i =1;
  2395                           
  2396                           ;incstack = 0
  2397 ;; hardware stack exceeded
  2398                           ; Regs used in _location: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2399  01A1  01FC               	clrf	location@i
  2400  01A2  0AFC               	incf	location@i,f
  2401                           
  2402                           ;PR17B.c: 513: lcd_clr();
  2403  01A3  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  2404                           
  2405                           ;PR17B.c: 514: lcd_goto(0);
  2406  01A8  3000               	movlw	0
  2407  01A9  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2408                           
  2409                           ;PR17B.c: 515: send_string("Location");
  2410  01AE  30A5               	movlw	low (STR_12| (0+32768))
  2411  01AF  00F9               	movwf	?_send_string
  2412  01B0  3089               	movlw	high (STR_12| (0+32768))
  2413  01B1  00FA               	movwf	?_send_string+1
  2414  01B2  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2415                           
  2416                           ;PR17B.c: 516: lcd_goto(20);
  2417  01B7  3014               	movlw	20
  2418  01B8  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2419                           
  2420                           ;PR17B.c: 517: send_string("1. Message 1");
  2421  01BD  30EC               	movlw	low (STR_27| (0+32768))
  2422  01BE  00F9               	movwf	?_send_string
  2423  01BF  3088               	movlw	high (STR_27| (0+32768))
  2424  01C0  00FA               	movwf	?_send_string+1
  2425  01C1  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2426  01C6                     l1876:	
  2427                           ;PR17B.c: 518: while(1)
  2428                           
  2429                           
  2430                           ;PR17B.c: 519: {
  2431                           ;PR17B.c: 520: if(RD5 == 0)
  2432  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2433  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2434  01C8  1A88               	btfsc	8,5	;volatile
  2435  01C9  29F2               	goto	l310
  2436  01CA                     l311:	
  2437                           ;PR17B.c: 521: {
  2438                           ;PR17B.c: 522: while(RD5 == 0) continue;
  2439                           
  2440  01CA  1E88               	btfss	8,5	;volatile
  2441  01CB  29CA               	goto	l311
  2442                           
  2443                           ;PR17B.c: 523: i++;
  2444  01CC  3001               	movlw	1
  2445  01CD  00FB               	movwf	??_location
  2446  01CE  087B               	movf	??_location,w
  2447  01CF  07FC               	addwf	location@i,f
  2448                           
  2449                           ;PR17B.c: 524: lcd_goto(20);
  2450  01D0  3014               	movlw	20
  2451  01D1  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2452                           
  2453                           ;PR17B.c: 525: switch (i)
  2454  01D6  29ED               	goto	l1890
  2455  01D7                     l1884:	
  2456                           ;PR17B.c: 526: {
  2457                           ;PR17B.c: 527: case 2 : send_string("2. Message 2");
  2458                           
  2459  01D7  30F9               	movlw	low (STR_14| (0+32768))
  2460  01D8  00F9               	movwf	?_send_string
  2461  01D9  3088               	movlw	high (STR_14| (0+32768))
  2462  01DA  00FA               	movwf	?_send_string+1
  2463  01DB  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2464                           
  2465                           ;PR17B.c: 528: break;
  2466  01E0  29F2               	goto	l310
  2467  01E1                     l1886:	
  2468                           ;PR17B.c: 530: default: send_string("1. Message 1");
  2469                           
  2470  01E1  30EC               	movlw	low (STR_27| (0+32768))
  2471  01E2  00F9               	movwf	?_send_string
  2472  01E3  3088               	movlw	high (STR_27| (0+32768))
  2473  01E4  00FA               	movwf	?_send_string+1
  2474  01E5  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2475                           
  2476                           ;PR17B.c: 531: i =1;
  2477  01EA  01FC               	clrf	location@i
  2478  01EB  0AFC               	incf	location@i,f
  2479                           
  2480                           ;PR17B.c: 532: }
  2481  01EC  29F2               	goto	l310
  2482  01ED                     l1890:	
  2483  01ED  087C               	movf	location@i,w
  2484                           
  2485                           ; Switch size 1, requested type "space"
  2486                           ; Number of cases is 1, Range of values is 2 to 2
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte            4     3 (average)
  2490                           ; direct_byte           14    11 (fixed)
  2491                           ; jumptable            263     9 (fixed)
  2492                           ;	Chosen strategy is simple_byte
  2493  01EE  3A02               	xorlw	2	; case 2
  2494  01EF  1903               	skipnz
  2495  01F0  29D7               	goto	l1884
  2496  01F1  29E1               	goto	l1886
  2497  01F2                     l310:	
  2498                           
  2499                           ;PR17B.c: 533: }
  2500                           ;PR17B.c: 534: if(RD4 == 0)
  2501  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2502  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2503  01F4  1A08               	btfsc	8,4	;volatile
  2504  01F5  29C6               	goto	l1876
  2505  01F6                     l319:	
  2506                           ;PR17B.c: 535: {
  2507                           ;PR17B.c: 536: while(RD4 == 0) continue;
  2508                           
  2509  01F6  1A08               	btfsc	8,4	;volatile
  2510  01F7  2A07               	goto	l1900
  2511  01F8  29F6               	goto	l319
  2512  01F9                     l1894:	
  2513                           ;PR17B.c: 538: {
  2514                           ;PR17B.c: 539: case 2 : message2r();
  2515                           
  2516                           ;PR17B.c: 537: switch (i)
  2517                           
  2518  01F9  120A  118A  23C9   	fcall	_message2r
      +       120A  118A         
  2519                           
  2520                           ;PR17B.c: 540: break;
  2521  01FE  29C6               	goto	l1876
  2522  01FF                     l1896:	
  2523                           ;PR17B.c: 541: default : message1r();
  2524                           
  2525  01FF  120A  118A  243B   	fcall	_message1r
      +       120A  118A         
  2526                           
  2527                           ;PR17B.c: 542: i = 1;
  2528  0204  01FC               	clrf	location@i
  2529  0205  0AFC               	incf	location@i,f
  2530                           
  2531                           ;PR17B.c: 543: }
  2532  0206  29C6               	goto	l1876
  2533  0207                     l1900:	
  2534  0207  087C               	movf	location@i,w
  2535                           
  2536                           ; Switch size 1, requested type "space"
  2537                           ; Number of cases is 1, Range of values is 2 to 2
  2538                           ; switch strategies available:
  2539                           ; Name         Instructions Cycles
  2540                           ; simple_byte            4     3 (average)
  2541                           ; direct_byte           14    11 (fixed)
  2542                           ; jumptable            263     9 (fixed)
  2543                           ;	Chosen strategy is simple_byte
  2544  0208  3A02               	xorlw	2	; case 2
  2545  0209  1903               	skipnz
  2546  020A  29F9               	goto	l1894
  2547  020B  29FF               	goto	l1896
  2548  020C  29C6               	goto	l1876
  2549  020D                     __end_of_location:	
  2550                           
  2551                           	psect	text9
  2552  043B                     __ptext9:	
  2553 ;; *************** function _message1r *****************
  2554 ;; Defined at:
  2555 ;;		line 550 in file "../../source file/PR17B.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         0       0       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    4
  2576 ;; This function calls:
  2577 ;;		_lcd_clr
  2578 ;;		_lcd_goto
  2579 ;;		_send_string
  2580 ;;		_uc_send_receive_spi
  2581 ;;		_tmr_delay
  2582 ;; This function is called by:
  2583 ;;		_location
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _message1r
  2589  043B                     _message1r:	
  2590                           
  2591                           ;PR17B.c: 551: RE1 = 0;
  2592                           
  2593                           ;incstack = 0
  2594 ;; hardware stack exceeded
  2595                           ; Regs used in _message1r: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2596  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2597  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2598  043D  1089               	bcf	9,1	;volatile
  2599                           
  2600                           ;PR17B.c: 552: uc_send_receive_spi(0b10000001);
  2601  043E  3081               	movlw	129
  2602  043F  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2603                           
  2604                           ;PR17B.c: 553: uc_send_receive_spi(0b00000000);
  2605  0444  3000               	movlw	0
  2606  0445  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2607                           
  2608                           ;PR17B.c: 554: uc_send_receive_spi(0b00001000);
  2609  044A  3008               	movlw	8
  2610  044B  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2611                           
  2612                           ;PR17B.c: 555: uc_send_receive_spi(0b00000000);
  2613  0450  3000               	movlw	0
  2614  0451  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2615                           
  2616                           ;PR17B.c: 556: uc_send_receive_spi(0b01101110);
  2617  0456  306E               	movlw	110
  2618  0457  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2619                           
  2620                           ;PR17B.c: 557: uc_send_receive_spi(0b10000000);
  2621  045C  3080               	movlw	128
  2622  045D  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2623                           
  2624                           ;PR17B.c: 558: uc_send_receive_spi(0b00000000);
  2625  0462  3000               	movlw	0
  2626  0463  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2627                           
  2628                           ;PR17B.c: 559: RE1 = 1;
  2629  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2631  046A  1489               	bsf	9,1	;volatile
  2632                           
  2633                           ;PR17B.c: 560: lcd_clr();
  2634  046B  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  2635                           
  2636                           ;PR17B.c: 561: lcd_goto(0);
  2637  0470  3000               	movlw	0
  2638  0471  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2639                           
  2640                           ;PR17B.c: 562: send_string("**recording the");
  2641  0476  3083               	movlw	low (STR_30| (0+32768))
  2642  0477  00F9               	movwf	?_send_string
  2643  0478  3088               	movlw	high (STR_30| (0+32768))
  2644  0479  00FA               	movwf	?_send_string+1
  2645  047A  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2646                           
  2647                           ;PR17B.c: 563: lcd_goto(20);
  2648  047F  3014               	movlw	20
  2649  0480  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2650                           
  2651                           ;PR17B.c: 564: send_string("first message**");
  2652  0485  3073               	movlw	low (STR_21| (0+32768))
  2653  0486  00F9               	movwf	?_send_string
  2654  0487  3088               	movlw	high (STR_21| (0+32768))
  2655  0488  00FA               	movwf	?_send_string+1
  2656  0489  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2657                           
  2658                           ;PR17B.c: 565: tmr_delay(4600);
  2659  048E  30F8               	movlw	248
  2660  048F  00F0               	movwf	?_tmr_delay
  2661  0490  3011               	movlw	17
  2662  0491  00F1               	movwf	?_tmr_delay+1
  2663  0492  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2664                           
  2665                           ;PR17B.c: 566: lcd_clr();
  2666  0497  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  2667                           
  2668                           ;PR17B.c: 567: lcd_goto(0);
  2669  049C  3000               	movlw	0
  2670  049D  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2671                           
  2672                           ;PR17B.c: 568: send_string("***halt***");
  2673  04A2  3071               	movlw	low (STR_22| (0+32768))
  2674  04A3  00F9               	movwf	?_send_string
  2675  04A4  3089               	movlw	high (STR_22| (0+32768))
  2676  04A5  00FA               	movwf	?_send_string+1
  2677  04A6  120A  158A  27D9   	fcall	_send_string
  2678                           
  2679                           ;PR17B.c: 569: RD3 =1;
  2680  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2681  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2682  04AB  1588               	bsf	8,3	;volatile
  2683  04AC  0008               	return
  2684  04AD                     __end_of_message1r:	
  2685                           
  2686                           	psect	text10
  2687  03C9                     __ptext10:	
  2688 ;; *************** function _message2r *****************
  2689 ;; Defined at:
  2690 ;;		line 573 in file "../../source file/PR17B.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    4
  2711 ;; This function calls:
  2712 ;;		_lcd_clr
  2713 ;;		_lcd_goto
  2714 ;;		_send_string
  2715 ;;		_uc_send_receive_spi
  2716 ;;		_tmr_delay
  2717 ;; This function is called by:
  2718 ;;		_location
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _message2r
  2724  03C9                     _message2r:	
  2725                           
  2726                           ;PR17B.c: 574: RE1 = 0;
  2727                           
  2728                           ;incstack = 0
  2729 ;; hardware stack exceeded
  2730                           ; Regs used in _message2r: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2731  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2732  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2733  03CB  1089               	bcf	9,1	;volatile
  2734                           
  2735                           ;PR17B.c: 575: uc_send_receive_spi(0b10000001);
  2736  03CC  3081               	movlw	129
  2737  03CD  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2738                           
  2739                           ;PR17B.c: 576: uc_send_receive_spi(0b00000000);
  2740  03D2  3000               	movlw	0
  2741  03D3  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2742                           
  2743                           ;PR17B.c: 577: uc_send_receive_spi(0b11101110);
  2744  03D8  30EE               	movlw	238
  2745  03D9  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2746                           
  2747                           ;PR17B.c: 578: uc_send_receive_spi(0b10000000);
  2748  03DE  3080               	movlw	128
  2749  03DF  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2750                           
  2751                           ;PR17B.c: 579: uc_send_receive_spi(0b10111011);
  2752  03E4  30BB               	movlw	187
  2753  03E5  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2754                           
  2755                           ;PR17B.c: 580: uc_send_receive_spi(0b01000000);
  2756  03EA  3040               	movlw	64
  2757  03EB  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2758                           
  2759                           ;PR17B.c: 581: uc_send_receive_spi(0b00000000);
  2760  03F0  3000               	movlw	0
  2761  03F1  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  2762                           
  2763                           ;PR17B.c: 582: RE1 = 1;
  2764  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2765  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2766  03F8  1489               	bsf	9,1	;volatile
  2767                           
  2768                           ;PR17B.c: 583: lcd_clr();
  2769  03F9  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  2770                           
  2771                           ;PR17B.c: 584: lcd_goto(0);
  2772  03FE  3000               	movlw	0
  2773  03FF  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2774                           
  2775                           ;PR17B.c: 585: send_string("**recording the");
  2776  0404  3083               	movlw	low (STR_30| (0+32768))
  2777  0405  00F9               	movwf	?_send_string
  2778  0406  3088               	movlw	high (STR_30| (0+32768))
  2779  0407  00FA               	movwf	?_send_string+1
  2780  0408  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2781                           
  2782                           ;PR17B.c: 586: lcd_goto(20);
  2783  040D  3014               	movlw	20
  2784  040E  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2785                           
  2786                           ;PR17B.c: 587: send_string("second message**");
  2787  0413  3032               	movlw	low (STR_24| (0+32768))
  2788  0414  00F9               	movwf	?_send_string
  2789  0415  3088               	movlw	high (STR_24| (0+32768))
  2790  0416  00FA               	movwf	?_send_string+1
  2791  0417  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2792                           
  2793                           ;PR17B.c: 588: tmr_delay(4600);
  2794  041C  30F8               	movlw	248
  2795  041D  00F0               	movwf	?_tmr_delay
  2796  041E  3011               	movlw	17
  2797  041F  00F1               	movwf	?_tmr_delay+1
  2798  0420  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  2799                           
  2800                           ;PR17B.c: 589: lcd_clr();
  2801  0425  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  2802                           
  2803                           ;PR17B.c: 590: lcd_goto(0);
  2804  042A  3000               	movlw	0
  2805  042B  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2806                           
  2807                           ;PR17B.c: 591: send_string("***halt***");
  2808  0430  3071               	movlw	low (STR_22| (0+32768))
  2809  0431  00F9               	movwf	?_send_string
  2810  0432  3089               	movlw	high (STR_22| (0+32768))
  2811  0433  00FA               	movwf	?_send_string+1
  2812  0434  120A  158A  27D9   	fcall	_send_string
  2813                           
  2814                           ;PR17B.c: 592: RD3 = 1;
  2815  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0439  1588               	bsf	8,3	;volatile
  2818  043A  0008               	return
  2819  043B                     __end_of_message2r:	
  2820                           
  2821                           	psect	text11
  2822  0135                     __ptext11:	
  2823 ;; *************** function _Erase *****************
  2824 ;; Defined at:
  2825 ;;		line 745 in file "../../source file/PR17B.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  i               1   12[COMMON] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;		None               void
  2832 ;; Registers used:
  2833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0
  2841 ;;      Temps:          1       0       0       0       0
  2842 ;;      Totals:         2       0       0       0       0
  2843 ;;Total ram usage:        2 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    5
  2846 ;; This function calls:
  2847 ;;		_lcd_clr
  2848 ;;		_lcd_goto
  2849 ;;		_send_string
  2850 ;;		_g_erase
  2851 ;;		_erase
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _Erase
  2859  0135                     _Erase:	
  2860                           
  2861                           ;PR17B.c: 746: char i =1;
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _Erase: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2865  0135  01FC               	clrf	Erase@i
  2866  0136  0AFC               	incf	Erase@i,f
  2867                           
  2868                           ;PR17B.c: 747: lcd_clr();
  2869  0137  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  2870                           
  2871                           ;PR17B.c: 748: lcd_goto(0);
  2872  013C  3000               	movlw	0
  2873  013D  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2874                           
  2875                           ;PR17B.c: 749: send_string("Decision");
  2876  0142  309C               	movlw	low (STR_46| (0+32768))
  2877  0143  00F9               	movwf	?_send_string
  2878  0144  3089               	movlw	high (STR_46| (0+32768))
  2879  0145  00FA               	movwf	?_send_string+1
  2880  0146  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2881                           
  2882                           ;PR17B.c: 750: lcd_goto(20);
  2883  014B  3014               	movlw	20
  2884  014C  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2885                           
  2886                           ;PR17B.c: 751: send_string("1. Erase       ");
  2887  0151  3053               	movlw	low (STR_47| (0+32768))
  2888  0152  00F9               	movwf	?_send_string
  2889  0153  3088               	movlw	high (STR_47| (0+32768))
  2890  0154  00FA               	movwf	?_send_string+1
  2891  0155  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2892  015A                     l1774:	
  2893                           ;PR17B.c: 752: while(1)
  2894                           
  2895                           
  2896                           ;PR17B.c: 753: {
  2897                           ;PR17B.c: 754: if(RD5 == 0)
  2898  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2899  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2900  015C  1A88               	btfsc	8,5	;volatile
  2901  015D  2986               	goto	l395
  2902  015E                     l396:	
  2903                           ;PR17B.c: 755: {
  2904                           ;PR17B.c: 756: while(RD5 == 0) continue;
  2905                           
  2906  015E  1E88               	btfss	8,5	;volatile
  2907  015F  295E               	goto	l396
  2908                           
  2909                           ;PR17B.c: 757: i++;
  2910  0160  3001               	movlw	1
  2911  0161  00FB               	movwf	??_Erase
  2912  0162  087B               	movf	??_Erase,w
  2913  0163  07FC               	addwf	Erase@i,f
  2914                           
  2915                           ;PR17B.c: 758: lcd_goto(20);
  2916  0164  3014               	movlw	20
  2917  0165  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  2918                           
  2919                           ;PR17B.c: 759: switch (i)
  2920  016A  2981               	goto	l1788
  2921  016B                     l1782:	
  2922                           ;PR17B.c: 760: {
  2923                           ;PR17B.c: 761: case 2 : send_string("2. Global Erase");
  2924                           
  2925  016B  3093               	movlw	low (STR_48| (0+32768))
  2926  016C  00F9               	movwf	?_send_string
  2927  016D  3088               	movlw	high (STR_48| (0+32768))
  2928  016E  00FA               	movwf	?_send_string+1
  2929  016F  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2930                           
  2931                           ;PR17B.c: 762: break;
  2932  0174  2986               	goto	l395
  2933  0175                     l1784:	
  2934                           ;PR17B.c: 764: default: send_string("1. Erase       ");
  2935                           
  2936  0175  3053               	movlw	low (STR_47| (0+32768))
  2937  0176  00F9               	movwf	?_send_string
  2938  0177  3088               	movlw	high (STR_47| (0+32768))
  2939  0178  00FA               	movwf	?_send_string+1
  2940  0179  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  2941                           
  2942                           ;PR17B.c: 765: i =1;
  2943  017E  01FC               	clrf	Erase@i
  2944  017F  0AFC               	incf	Erase@i,f
  2945                           
  2946                           ;PR17B.c: 766: }
  2947  0180  2986               	goto	l395
  2948  0181                     l1788:	
  2949  0181  087C               	movf	Erase@i,w
  2950                           
  2951                           ; Switch size 1, requested type "space"
  2952                           ; Number of cases is 1, Range of values is 2 to 2
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte            4     3 (average)
  2956                           ; direct_byte           14    11 (fixed)
  2957                           ; jumptable            263     9 (fixed)
  2958                           ;	Chosen strategy is simple_byte
  2959  0182  3A02               	xorlw	2	; case 2
  2960  0183  1903               	skipnz
  2961  0184  296B               	goto	l1782
  2962  0185  2975               	goto	l1784
  2963  0186                     l395:	
  2964                           
  2965                           ;PR17B.c: 767: }
  2966                           ;PR17B.c: 768: if(RD4 == 0)
  2967  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0188  1A08               	btfsc	8,4	;volatile
  2970  0189  295A               	goto	l1774
  2971  018A                     l404:	
  2972                           ;PR17B.c: 769: {
  2973                           ;PR17B.c: 770: while(RD4 == 0) continue;
  2974                           
  2975  018A  1A08               	btfsc	8,4	;volatile
  2976  018B  299B               	goto	l1798
  2977  018C  298A               	goto	l404
  2978  018D                     l1792:	
  2979                           ;PR17B.c: 772: {
  2980                           ;PR17B.c: 773: case 2 : g_erase();
  2981                           
  2982                           ;PR17B.c: 771: switch (i)
  2983                           
  2984  018D  120A  118A  2046   	fcall	_g_erase
      +       120A  118A         
  2985                           
  2986                           ;PR17B.c: 774: break;
  2987  0192  295A               	goto	l1774
  2988  0193                     l1794:	
  2989                           ;PR17B.c: 775: default : erase();
  2990                           
  2991  0193  120A  118A  2091   	fcall	_erase
      +       120A  118A         
  2992                           
  2993                           ;PR17B.c: 776: i = 1;
  2994  0198  01FC               	clrf	Erase@i
  2995  0199  0AFC               	incf	Erase@i,f
  2996                           
  2997                           ;PR17B.c: 777: }
  2998  019A  295A               	goto	l1774
  2999  019B                     l1798:	
  3000  019B  087C               	movf	Erase@i,w
  3001                           
  3002                           ; Switch size 1, requested type "space"
  3003                           ; Number of cases is 1, Range of values is 2 to 2
  3004                           ; switch strategies available:
  3005                           ; Name         Instructions Cycles
  3006                           ; simple_byte            4     3 (average)
  3007                           ; direct_byte           14    11 (fixed)
  3008                           ; jumptable            263     9 (fixed)
  3009                           ;	Chosen strategy is simple_byte
  3010  019C  3A02               	xorlw	2	; case 2
  3011  019D  1903               	skipnz
  3012  019E  298D               	goto	l1792
  3013  019F  2993               	goto	l1794
  3014  01A0  295A               	goto	l1774
  3015  01A1                     __end_of_Erase:	
  3016                           
  3017                           	psect	text12
  3018  0091                     __ptext12:	
  3019 ;; *************** function _erase *****************
  3020 ;; Defined at:
  3021 ;;		line 784 in file "../../source file/PR17B.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;		None               void
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0
  3038 ;;      Totals:         0       0       0       0       0
  3039 ;;Total ram usage:        0 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    4
  3042 ;; This function calls:
  3043 ;;		_lcd_clr
  3044 ;;		_lcd_goto
  3045 ;;		_send_string
  3046 ;;		_uc_send_receive_spi
  3047 ;;		_tmr_delay
  3048 ;; This function is called by:
  3049 ;;		_Erase
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _erase
  3055  0091                     _erase:	
  3056                           
  3057                           ;PR17B.c: 785: RE1 = 0;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _erase: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3061  0091  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0092  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0093  1089               	bcf	9,1	;volatile
  3064                           
  3065                           ;PR17B.c: 786: uc_send_receive_spi(0b10000000);
  3066  0094  3080               	movlw	128
  3067  0095  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3068                           
  3069                           ;PR17B.c: 787: uc_send_receive_spi(0b00000000);
  3070  009A  3000               	movlw	0
  3071  009B  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3072                           
  3073                           ;PR17B.c: 788: RE1 = 1;
  3074  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  3075  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  3076  00A2  1489               	bsf	9,1	;volatile
  3077                           
  3078                           ;PR17B.c: 789: tmr_delay(10);
  3079  00A3  300A               	movlw	10
  3080  00A4  00F0               	movwf	?_tmr_delay
  3081  00A5  3000               	movlw	0
  3082  00A6  00F1               	movwf	?_tmr_delay+1
  3083  00A7  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  3084                           
  3085                           ;PR17B.c: 791: RE1 = 0;
  3086  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  3087  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  3088  00AE  1089               	bcf	9,1	;volatile
  3089                           
  3090                           ;PR17B.c: 792: uc_send_receive_spi(0b01000010);
  3091  00AF  3042               	movlw	66
  3092  00B0  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3093                           
  3094                           ;PR17B.c: 793: uc_send_receive_spi(0b00000000);
  3095  00B5  3000               	movlw	0
  3096  00B6  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3097                           
  3098                           ;PR17B.c: 794: RE1 = 1;
  3099  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3100  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3101  00BD  1489               	bsf	9,1	;volatile
  3102                           
  3103                           ;PR17B.c: 795: tmr_delay(100);
  3104  00BE  3064               	movlw	100
  3105  00BF  00F0               	movwf	?_tmr_delay
  3106  00C0  3000               	movlw	0
  3107  00C1  00F1               	movwf	?_tmr_delay+1
  3108  00C2  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  3109                           
  3110                           ;PR17B.c: 796: lcd_clr();
  3111  00C7  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  3112                           
  3113                           ;PR17B.c: 797: lcd_goto(20);
  3114  00CC  3014               	movlw	20
  3115  00CD  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3116                           
  3117                           ;PR17B.c: 798: send_string("Erased");
  3118  00D2  30B6               	movlw	low (STR_50| (0+32768))
  3119  00D3  00F9               	movwf	?_send_string
  3120  00D4  3089               	movlw	high (STR_50| (0+32768))
  3121  00D5  00FA               	movwf	?_send_string+1
  3122  00D6  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3123  00DB                     l416:	
  3124                           ;PR17B.c: 799: while(1);
  3125                           
  3126  00DB  28DB               	goto	l416
  3127  00DC                     __end_of_erase:	
  3128                           
  3129                           	psect	text13
  3130  0046                     __ptext13:	
  3131 ;; *************** function _g_erase *****************
  3132 ;; Defined at:
  3133 ;;		line 804 in file "../../source file/PR17B.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;		None               void
  3140 ;; Registers used:
  3141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3147 ;;      Params:         0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    4
  3154 ;; This function calls:
  3155 ;;		_lcd_clr
  3156 ;;		_lcd_goto
  3157 ;;		_send_string
  3158 ;;		_uc_send_receive_spi
  3159 ;;		_tmr_delay
  3160 ;; This function is called by:
  3161 ;;		_Erase
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _g_erase
  3167  0046                     _g_erase:	
  3168                           
  3169                           ;PR17B.c: 805: RE1 = 0;
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _g_erase: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3173  0046  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0047  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0048  1089               	bcf	9,1	;volatile
  3176                           
  3177                           ;PR17B.c: 806: uc_send_receive_spi(0b10000000);
  3178  0049  3080               	movlw	128
  3179  004A  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3180                           
  3181                           ;PR17B.c: 807: uc_send_receive_spi(0b00000000);
  3182  004F  3000               	movlw	0
  3183  0050  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3184                           
  3185                           ;PR17B.c: 808: RE1 = 1;
  3186  0055  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0056  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0057  1489               	bsf	9,1	;volatile
  3189                           
  3190                           ;PR17B.c: 809: tmr_delay(10);
  3191  0058  300A               	movlw	10
  3192  0059  00F0               	movwf	?_tmr_delay
  3193  005A  3000               	movlw	0
  3194  005B  00F1               	movwf	?_tmr_delay+1
  3195  005C  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  3196                           
  3197                           ;PR17B.c: 811: RE1 = 0;
  3198  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0063  1089               	bcf	9,1	;volatile
  3201                           
  3202                           ;PR17B.c: 812: uc_send_receive_spi(0b11000010);
  3203  0064  30C2               	movlw	194
  3204  0065  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3205                           
  3206                           ;PR17B.c: 813: uc_send_receive_spi(0b00000000);
  3207  006A  3000               	movlw	0
  3208  006B  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3209                           
  3210                           ;PR17B.c: 814: RE1 = 1;
  3211  0070  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0071  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0072  1489               	bsf	9,1	;volatile
  3214                           
  3215                           ;PR17B.c: 815: tmr_delay(100);
  3216  0073  3064               	movlw	100
  3217  0074  00F0               	movwf	?_tmr_delay
  3218  0075  3000               	movlw	0
  3219  0076  00F1               	movwf	?_tmr_delay+1
  3220  0077  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  3221                           
  3222                           ;PR17B.c: 816: lcd_clr();
  3223  007C  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  3224                           
  3225                           ;PR17B.c: 817: lcd_goto(20);
  3226  0081  3014               	movlw	20
  3227  0082  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3228                           
  3229                           ;PR17B.c: 818: send_string("Memory Cleared");
  3230  0087  30B3               	movlw	low (STR_51| (0+32768))
  3231  0088  00F9               	movwf	?_send_string
  3232  0089  3088               	movlw	high (STR_51| (0+32768))
  3233  008A  00FA               	movwf	?_send_string+1
  3234  008B  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3235  0090                     l422:	
  3236                           ;PR17B.c: 819: while(1);
  3237                           
  3238  0090  2890               	goto	l422
  3239  0091                     __end_of_g_erase:	
  3240                           
  3241                           	psect	text14
  3242  0753                     __ptext14:	
  3243 ;; *************** function _Stand *****************
  3244 ;; Defined at:
  3245 ;;		line 342 in file "../../source file/PR17B.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  i               1    0[BANK0 ] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;		None               void
  3252 ;; Registers used:
  3253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         0       0       0       0       0
  3260 ;;      Locals:         0       1       0       0       0
  3261 ;;      Temps:          1       0       0       0       0
  3262 ;;      Totals:         1       1       0       0       0
  3263 ;;Total ram usage:        2 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    6
  3266 ;; This function calls:
  3267 ;;		_lcd_clr
  3268 ;;		_lcd_goto
  3269 ;;		_send_string
  3270 ;;		_uc_send_receive_spi
  3271 ;;		_Play_s
  3272 ;;		_Option
  3273 ;;		_Forward
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function _Stand
  3281  0753                     _Stand:	
  3282                           
  3283                           ;PR17B.c: 343: char i =1;
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _Stand: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3287  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0754  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0755  01A8               	clrf	Stand@i
  3290  0756  0AA8               	incf	Stand@i,f
  3291                           
  3292                           ;PR17B.c: 344: RE1 = 0;
  3293  0757  1089               	bcf	9,1	;volatile
  3294                           
  3295                           ;PR17B.c: 345: uc_send_receive_spi(0b11100000);
  3296  0758  30E0               	movlw	224
  3297  0759  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3298                           
  3299                           ;PR17B.c: 346: uc_send_receive_spi(0b00000000);
  3300  075E  3000               	movlw	0
  3301  075F  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  3302                           
  3303                           ;PR17B.c: 347: RE1 = 1;
  3304  0764  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0765  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0766  1489               	bsf	9,1	;volatile
  3307                           
  3308                           ;PR17B.c: 349: lcd_clr();
  3309  0767  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  3310                           
  3311                           ;PR17B.c: 350: lcd_goto(0);
  3312  076C  3000               	movlw	0
  3313  076D  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3314                           
  3315                           ;PR17B.c: 351: send_string("Switch mode");
  3316  0772  304E               	movlw	low (STR_3| (0+32768))
  3317  0773  00F9               	movwf	?_send_string
  3318  0774  3089               	movlw	high (STR_3| (0+32768))
  3319  0775  00FA               	movwf	?_send_string+1
  3320  0776  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3321                           
  3322                           ;PR17B.c: 352: lcd_goto(20);
  3323  077B  3014               	movlw	20
  3324  077C  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3325                           
  3326                           ;PR17B.c: 353: send_string("1. Forward");
  3327  0781  3087               	movlw	low (STR_8| (0+32768))
  3328  0782  00F9               	movwf	?_send_string
  3329  0783  3089               	movlw	high (STR_8| (0+32768))
  3330  0784  00FA               	movwf	?_send_string+1
  3331  0785  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3332  078A                     l1912:	
  3333                           ;PR17B.c: 354: while(1)
  3334                           
  3335                           
  3336                           ;PR17B.c: 355: {
  3337                           ;PR17B.c: 356: if(RD5 == 0)
  3338  078A  1283               	bcf	3,5	;RP0=0, select bank0
  3339  078B  1303               	bcf	3,6	;RP1=0, select bank0
  3340  078C  1A88               	btfsc	8,5	;volatile
  3341  078D  2FC7               	goto	l236
  3342  078E                     l237:	
  3343                           ;PR17B.c: 357: {
  3344                           ;PR17B.c: 358: while(RD5 == 0) continue;
  3345                           
  3346  078E  1E88               	btfss	8,5	;volatile
  3347  078F  2F8E               	goto	l237
  3348                           
  3349                           ;PR17B.c: 359: i++;
  3350  0790  3001               	movlw	1
  3351  0791  00FD               	movwf	??_Stand
  3352  0792  087D               	movf	??_Stand,w
  3353  0793  07A8               	addwf	Stand@i,f
  3354                           
  3355                           ;PR17B.c: 360: lcd_goto(20);
  3356  0794  3014               	movlw	20
  3357  0795  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3358                           
  3359                           ;PR17B.c: 361: switch (i)
  3360  079A  2FBD               	goto	l1928
  3361  079B                     l1920:	
  3362                           ;PR17B.c: 362: {
  3363                           ;PR17B.c: 363: case 2 : send_string("2. Play    ");
  3364                           
  3365  079B  3006               	movlw	low (STR_9| (0+32768))
  3366  079C  00F9               	movwf	?_send_string
  3367  079D  3089               	movlw	high (STR_9| (0+32768))
  3368  079E  00FA               	movwf	?_send_string+1
  3369  079F  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3370                           
  3371                           ;PR17B.c: 364: break;
  3372  07A4  2FC7               	goto	l236
  3373  07A5                     l1922:	
  3374                           ;PR17B.c: 365: case 3 : send_string("3. Record  ");
  3375                           
  3376  07A5  301E               	movlw	low (STR_10| (0+32768))
  3377  07A6  00F9               	movwf	?_send_string
  3378  07A7  3089               	movlw	high (STR_10| (0+32768))
  3379  07A8  00FA               	movwf	?_send_string+1
  3380  07A9  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3381                           
  3382                           ;PR17B.c: 366: break;
  3383  07AE  2FC7               	goto	l236
  3384  07AF                     l1924:	
  3385                           ;PR17B.c: 367: default: send_string("1. Forward ");
  3386                           
  3387  07AF  302A               	movlw	low (STR_11| (0+32768))
  3388  07B0  00F9               	movwf	?_send_string
  3389  07B1  3089               	movlw	high (STR_11| (0+32768))
  3390  07B2  00FA               	movwf	?_send_string+1
  3391  07B3  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3392                           
  3393                           ;PR17B.c: 368: i =1;
  3394  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3395  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3396  07BA  01A8               	clrf	Stand@i
  3397  07BB  0AA8               	incf	Stand@i,f
  3398                           
  3399                           ;PR17B.c: 369: }
  3400  07BC  2FC7               	goto	l236
  3401  07BD                     l1928:	
  3402  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3403  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  3404  07BF  0828               	movf	Stand@i,w
  3405                           
  3406                           ; Switch size 1, requested type "space"
  3407                           ; Number of cases is 2, Range of values is 2 to 3
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte            7     4 (average)
  3411                           ; direct_byte           17    11 (fixed)
  3412                           ; jumptable            263     9 (fixed)
  3413                           ;	Chosen strategy is simple_byte
  3414  07C0  3A02               	xorlw	2	; case 2
  3415  07C1  1903               	skipnz
  3416  07C2  2F9B               	goto	l1920
  3417  07C3  3A01               	xorlw	1	; case 3
  3418  07C4  1903               	skipnz
  3419  07C5  2FA5               	goto	l1922
  3420  07C6  2FAF               	goto	l1924
  3421  07C7                     l236:	
  3422                           
  3423                           ;PR17B.c: 370: }
  3424                           ;PR17B.c: 371: if(RD4 == 0)
  3425  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3426  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3427  07C9  1A08               	btfsc	8,4	;volatile
  3428  07CA  2F8A               	goto	l1912
  3429  07CB                     l246:	
  3430                           ;PR17B.c: 372: {
  3431                           ;PR17B.c: 373: while(RD4 == 0) continue;
  3432                           
  3433  07CB  1A08               	btfsc	8,4	;volatile
  3434  07CC  2FE4               	goto	l1940
  3435  07CD  2FCB               	goto	l246
  3436  07CE                     l1932:	
  3437                           ;PR17B.c: 375: {
  3438                           ;PR17B.c: 376: case 2 : Play_s();
  3439                           
  3440                           ;PR17B.c: 374: switch (i)
  3441                           
  3442  07CE  120A  158A  275D   	fcall	_Play_s
      +       120A  118A         
  3443                           
  3444                           ;PR17B.c: 377: break;
  3445  07D3  2F8A               	goto	l1912
  3446  07D4                     l1934:	
  3447                           ;PR17B.c: 378: case 3 : Option();
  3448                           
  3449  07D4  120A  118A  2357   	fcall	_Option
      +       120A  118A         
  3450                           
  3451                           ;PR17B.c: 379: break;
  3452  07D9  2F8A               	goto	l1912
  3453  07DA                     l1936:	
  3454                           ;PR17B.c: 380: default : Forward();
  3455                           
  3456  07DA  120A  158A  277A   	fcall	_Forward
      +       120A  118A         
  3457                           
  3458                           ;PR17B.c: 381: i = 1;
  3459  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  3460  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  3461  07E1  01A8               	clrf	Stand@i
  3462  07E2  0AA8               	incf	Stand@i,f
  3463                           
  3464                           ;PR17B.c: 382: }
  3465  07E3  2F8A               	goto	l1912
  3466  07E4                     l1940:	
  3467  07E4  0828               	movf	Stand@i,w
  3468                           
  3469                           ; Switch size 1, requested type "space"
  3470                           ; Number of cases is 2, Range of values is 2 to 3
  3471                           ; switch strategies available:
  3472                           ; Name         Instructions Cycles
  3473                           ; simple_byte            7     4 (average)
  3474                           ; direct_byte           17    11 (fixed)
  3475                           ; jumptable            263     9 (fixed)
  3476                           ;	Chosen strategy is simple_byte
  3477  07E5  3A02               	xorlw	2	; case 2
  3478  07E6  1903               	skipnz
  3479  07E7  2FCE               	goto	l1932
  3480  07E8  3A01               	xorlw	1	; case 3
  3481  07E9  1903               	skipnz
  3482  07EA  2FD4               	goto	l1934
  3483  07EB  2FDA               	goto	l1936
  3484  07EC  2F8A               	goto	l1912
  3485  07ED                     __end_of_Stand:	
  3486                           
  3487                           	psect	text15
  3488  0F7A                     __ptext15:	
  3489 ;; *************** function _Forward *****************
  3490 ;; Defined at:
  3491 ;;		line 657 in file "../../source file/PR17B.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;		None               void
  3498 ;; Registers used:
  3499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    4
  3512 ;; This function calls:
  3513 ;;		_lcd_goto
  3514 ;;		_send_string
  3515 ;;		_tmr_delay
  3516 ;; This function is called by:
  3517 ;;		_Stand
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function _Forward
  3523  0F7A                     _Forward:	
  3524                           
  3525                           ;PR17B.c: 658: RC0 = 0;
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in _Forward: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3529  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0F7C  1007               	bcf	7,0	;volatile
  3532                           
  3533                           ;PR17B.c: 659: lcd_goto(20);
  3534  0F7D  3014               	movlw	20
  3535  0F7E  120A  158A  2719   	fcall	_lcd_goto
      +       120A  158A         
  3536                           
  3537                           ;PR17B.c: 660: send_string("**forward**");
  3538  0F83  3036               	movlw	low (STR_36| (0+32768))
  3539  0F84  00F9               	movwf	?_send_string
  3540  0F85  3089               	movlw	high (STR_36| (0+32768))
  3541  0F86  00FA               	movwf	?_send_string+1
  3542  0F87  120A  158A  27D9   	fcall	_send_string
      +       120A  158A         
  3543                           
  3544                           ;PR17B.c: 661: tmr_delay(300);
  3545  0F8C  302C               	movlw	44
  3546  0F8D  00F0               	movwf	?_tmr_delay
  3547  0F8E  3001               	movlw	1
  3548  0F8F  00F1               	movwf	?_tmr_delay+1
  3549  0F90  120A  158A  26F5   	fcall	_tmr_delay
  3550                           
  3551                           ;PR17B.c: 662: RC0 = 1;
  3552  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0F95  1407               	bsf	7,0	;volatile
  3555  0F96  0008               	return
  3556  0F97                     __end_of_Forward:	
  3557                           
  3558                           	psect	text16
  3559  0357                     __ptext16:	
  3560 ;; *************** function _Option *****************
  3561 ;; Defined at:
  3562 ;;		line 675 in file "../../source file/PR17B.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  i               1   12[COMMON] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         0       0       0       0       0
  3577 ;;      Locals:         1       0       0       0       0
  3578 ;;      Temps:          1       0       0       0       0
  3579 ;;      Totals:         2       0       0       0       0
  3580 ;;Total ram usage:        2 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    5
  3583 ;; This function calls:
  3584 ;;		_lcd_clr
  3585 ;;		_lcd_goto
  3586 ;;		_send_string
  3587 ;;		_Record_s
  3588 ;; This function is called by:
  3589 ;;		_Stand
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _Option
  3595  0357                     _Option:	
  3596                           
  3597                           ;PR17B.c: 676: char i =1;
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _Option: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3601  0357  01FC               	clrf	Option@i
  3602  0358  0AFC               	incf	Option@i,f
  3603                           
  3604                           ;PR17B.c: 677: lcd_clr();
  3605  0359  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  3606                           
  3607                           ;PR17B.c: 678: lcd_goto(0);
  3608  035E  3000               	movlw	0
  3609  035F  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3610                           
  3611                           ;PR17B.c: 679: send_string("Option");
  3612  0364  30BD               	movlw	low (STR_16| (0+32768))
  3613  0365  00F9               	movwf	?_send_string
  3614  0366  3089               	movlw	high (STR_16| (0+32768))
  3615  0367  00FA               	movwf	?_send_string+1
  3616  0368  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3617                           
  3618                           ;PR17B.c: 680: lcd_goto(20);
  3619  036D  3014               	movlw	20
  3620  036E  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3621                           
  3622                           ;PR17B.c: 681: send_string("1. Analog Input");
  3623  0373  30A3               	movlw	low (STR_17| (0+32768))
  3624  0374  00F9               	movwf	?_send_string
  3625  0375  3088               	movlw	high (STR_17| (0+32768))
  3626  0376  00FA               	movwf	?_send_string+1
  3627  0377  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3628  037C                     l1842:	
  3629                           ;PR17B.c: 682: while(1)
  3630                           
  3631                           
  3632                           ;PR17B.c: 683: {
  3633                           ;PR17B.c: 684: if(RD5 == 0)
  3634  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3635  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3636  037E  1A88               	btfsc	8,5	;volatile
  3637  037F  2BA8               	goto	l350
  3638  0380                     l351:	
  3639                           ;PR17B.c: 685: {
  3640                           ;PR17B.c: 686: while(RD5 == 0) continue;
  3641                           
  3642  0380  1E88               	btfss	8,5	;volatile
  3643  0381  2B80               	goto	l351
  3644                           
  3645                           ;PR17B.c: 687: i++;
  3646  0382  3001               	movlw	1
  3647  0383  00FB               	movwf	??_Option
  3648  0384  087B               	movf	??_Option,w
  3649  0385  07FC               	addwf	Option@i,f
  3650                           
  3651                           ;PR17B.c: 688: lcd_goto(20);
  3652  0386  3014               	movlw	20
  3653  0387  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3654                           
  3655                           ;PR17B.c: 689: switch (i)
  3656  038C  2BA3               	goto	l1856
  3657  038D                     l1850:	
  3658                           ;PR17B.c: 690: {
  3659                           ;PR17B.c: 691: case 2 : send_string("2. MIC         ");
  3660                           
  3661  038D  3043               	movlw	low (STR_18| (0+32768))
  3662  038E  00F9               	movwf	?_send_string
  3663  038F  3088               	movlw	high (STR_18| (0+32768))
  3664  0390  00FA               	movwf	?_send_string+1
  3665  0391  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3666                           
  3667                           ;PR17B.c: 692: break;
  3668  0396  2BA8               	goto	l350
  3669  0397                     l1852:	
  3670                           ;PR17B.c: 693: default: send_string("1. Analog Input");
  3671                           
  3672  0397  30A3               	movlw	low (STR_17| (0+32768))
  3673  0398  00F9               	movwf	?_send_string
  3674  0399  3088               	movlw	high (STR_17| (0+32768))
  3675  039A  00FA               	movwf	?_send_string+1
  3676  039B  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3677                           
  3678                           ;PR17B.c: 694: i =1;
  3679  03A0  01FC               	clrf	Option@i
  3680  03A1  0AFC               	incf	Option@i,f
  3681                           
  3682                           ;PR17B.c: 695: }
  3683  03A2  2BA8               	goto	l350
  3684  03A3                     l1856:	
  3685  03A3  087C               	movf	Option@i,w
  3686                           
  3687                           ; Switch size 1, requested type "space"
  3688                           ; Number of cases is 1, Range of values is 2 to 2
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte            4     3 (average)
  3692                           ; direct_byte           14    11 (fixed)
  3693                           ; jumptable            263     9 (fixed)
  3694                           ;	Chosen strategy is simple_byte
  3695  03A4  3A02               	xorlw	2	; case 2
  3696  03A5  1903               	skipnz
  3697  03A6  2B8D               	goto	l1850
  3698  03A7  2B97               	goto	l1852
  3699  03A8                     l350:	
  3700                           
  3701                           ;PR17B.c: 696: }
  3702                           ;PR17B.c: 697: if(RD4 == 0)
  3703  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  3704  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  3705  03AA  1A08               	btfsc	8,4	;volatile
  3706  03AB  2B7C               	goto	l1842
  3707  03AC                     l359:	
  3708                           ;PR17B.c: 698: {
  3709                           ;PR17B.c: 699: while(RD4 == 0) continue;
  3710                           
  3711  03AC  1A08               	btfsc	8,4	;volatile
  3712  03AD  2BC3               	goto	l1866
  3713  03AE  2BAC               	goto	l359
  3714  03AF                     l363:	
  3715                           ;PR17B.c: 701: {
  3716                           ;PR17B.c: 702: case 2 : RD3 = 1; Record_s();
  3717                           
  3718                           ;PR17B.c: 700: switch (i)
  3719                           
  3720  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3721  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3722  03B1  1588               	bsf	8,3	;volatile
  3723  03B2  120A  118A  20DC   	fcall	_Record_s
      +       120A  118A         
  3724                           
  3725                           ;PR17B.c: 703: break;
  3726  03B7  2B7C               	goto	l1842
  3727  03B8                     l365:	
  3728                           ;PR17B.c: 704: default : RD3 = 0; Record_s();
  3729                           
  3730  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3731  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3732  03BA  1188               	bcf	8,3	;volatile
  3733  03BB  120A  118A  20DC   	fcall	_Record_s
      +       120A  118A         
  3734                           
  3735                           ;PR17B.c: 705: i = 1;
  3736  03C0  01FC               	clrf	Option@i
  3737  03C1  0AFC               	incf	Option@i,f
  3738                           
  3739                           ;PR17B.c: 706: }
  3740  03C2  2B7C               	goto	l1842
  3741  03C3                     l1866:	
  3742  03C3  087C               	movf	Option@i,w
  3743                           
  3744                           ; Switch size 1, requested type "space"
  3745                           ; Number of cases is 1, Range of values is 2 to 2
  3746                           ; switch strategies available:
  3747                           ; Name         Instructions Cycles
  3748                           ; simple_byte            4     3 (average)
  3749                           ; direct_byte           14    11 (fixed)
  3750                           ; jumptable            263     9 (fixed)
  3751                           ;	Chosen strategy is simple_byte
  3752  03C4  3A02               	xorlw	2	; case 2
  3753  03C5  1903               	skipnz
  3754  03C6  2BAF               	goto	l363
  3755  03C7  2BB8               	goto	l365
  3756  03C8  2B7C               	goto	l1842
  3757  03C9                     __end_of_Option:	
  3758                           
  3759                           	psect	text17
  3760  00DC                     __ptext17:	
  3761 ;; *************** function _Record_s *****************
  3762 ;; Defined at:
  3763 ;;		line 713 in file "../../source file/PR17B.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;		None               void
  3770 ;; Registers used:
  3771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3777 ;;      Params:         0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; Hardware stack levels required when called:    4
  3784 ;; This function calls:
  3785 ;;		_lcd_clr
  3786 ;;		_lcd_goto
  3787 ;;		_send_string
  3788 ;; This function is called by:
  3789 ;;		_Option
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _Record_s
  3795  00DC                     _Record_s:	
  3796  00DC                     l372:	
  3797                           ;PR17B.c: 715: {
  3798                           ;PR17B.c: 716: while(RD4 == 1)continue;
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in _Record_s: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3802                           ;PR17B.c: 714: while(1)
  3803                           
  3804  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  3805  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  3806  00DE  1A08               	btfsc	8,4	;volatile
  3807  00DF  28DC               	goto	l372
  3808                           
  3809                           ;PR17B.c: 717: if(RD4 == 0)
  3810  00E0  1A08               	btfsc	8,4	;volatile
  3811  00E1  2908               	goto	l379
  3812  00E2                     l376:	
  3813                           ;PR17B.c: 719: {
  3814                           ;PR17B.c: 720: while(RD4 == 0) continue;
  3815                           
  3816  00E2  1E08               	btfss	8,4	;volatile
  3817  00E3  28E2               	goto	l376
  3818                           
  3819                           ;PR17B.c: 721: RA0 = 0;
  3820  00E4  1005               	bcf	5,0	;volatile
  3821                           
  3822                           ;PR17B.c: 722: lcd_clr();
  3823  00E5  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  3824                           
  3825                           ;PR17B.c: 723: lcd_goto(0);
  3826  00EA  3000               	movlw	0
  3827  00EB  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3828                           
  3829                           ;PR17B.c: 724: send_string("**record**");
  3830  00F0  307C               	movlw	low (STR_42| (0+32768))
  3831  00F1  00F9               	movwf	?_send_string
  3832  00F2  3089               	movlw	high (STR_42| (0+32768))
  3833  00F3  00FA               	movwf	?_send_string+1
  3834  00F4  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3835                           
  3836                           ;PR17B.c: 725: lcd_goto(20);
  3837  00F9  3014               	movlw	20
  3838  00FA  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3839                           
  3840                           ;PR17B.c: 726: send_string("select to stop");
  3841  00FF  30C2               	movlw	low (STR_43| (0+32768))
  3842  0100  00F9               	movwf	?_send_string
  3843  0101  3088               	movlw	high (STR_43| (0+32768))
  3844  0102  00FA               	movwf	?_send_string+1
  3845  0103  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3846  0108                     l379:	
  3847                           ;PR17B.c: 727: }
  3848                           ;PR17B.c: 728: while(RD5 ==1)continue;
  3849                           
  3850  0108  1283               	bcf	3,5	;RP0=0, select bank0
  3851  0109  1303               	bcf	3,6	;RP1=0, select bank0
  3852  010A  1A88               	btfsc	8,5	;volatile
  3853  010B  2908               	goto	l379
  3854                           
  3855                           ;PR17B.c: 729: if(RD5 == 0)
  3856  010C  1A88               	btfsc	8,5	;volatile
  3857  010D  28DC               	goto	l372
  3858  010E                     l383:	
  3859                           ;PR17B.c: 730: {
  3860                           ;PR17B.c: 731: while(RD5 == 0)continue;
  3861                           
  3862  010E  1E88               	btfss	8,5	;volatile
  3863  010F  290E               	goto	l383
  3864                           
  3865                           ;PR17B.c: 732: RA0 = 1;
  3866  0110  1405               	bsf	5,0	;volatile
  3867                           
  3868                           ;PR17B.c: 733: lcd_clr();
  3869  0111  120A  158A  2707   	fcall	_lcd_clr
      +       120A  118A         
  3870                           
  3871                           ;PR17B.c: 734: lcd_goto(0);
  3872  0116  3000               	movlw	0
  3873  0117  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3874                           
  3875                           ;PR17B.c: 735: send_string("**stop ");
  3876  011C  30AE               	movlw	low (STR_44| (0+32768))
  3877  011D  00F9               	movwf	?_send_string
  3878  011E  3089               	movlw	high (STR_44| (0+32768))
  3879  011F  00FA               	movwf	?_send_string+1
  3880  0120  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3881                           
  3882                           ;PR17B.c: 736: lcd_goto(20);
  3883  0125  3014               	movlw	20
  3884  0126  120A  158A  2719   	fcall	_lcd_goto
      +       120A  118A         
  3885                           
  3886                           ;PR17B.c: 737: send_string("recording**");
  3887  012B  3042               	movlw	low (STR_45| (0+32768))
  3888  012C  00F9               	movwf	?_send_string
  3889  012D  3089               	movlw	high (STR_45| (0+32768))
  3890  012E  00FA               	movwf	?_send_string+1
  3891  012F  120A  158A  27D9   	fcall	_send_string
      +       120A  118A         
  3892  0134                     l386:	
  3893                           ;PR17B.c: 738: while(1){}
  3894                           
  3895  0134  2934               	goto	l386
  3896  0135                     __end_of_Record_s:	
  3897                           
  3898                           	psect	text18
  3899  0F07                     __ptext18:	
  3900 ;; *************** function _lcd_clr *****************
  3901 ;; Defined at:
  3902 ;;		line 285 in file "../../source file/PR17B.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;		None               void
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    3
  3923 ;; This function calls:
  3924 ;;		_send_config
  3925 ;;		_delay
  3926 ;; This function is called by:
  3927 ;;		_main
  3928 ;;		_Spi
  3929 ;;		_Stand
  3930 ;;		_Play
  3931 ;;		_Record
  3932 ;;		_message1p
  3933 ;;		_message2p
  3934 ;;		_location
  3935 ;;		_message1r
  3936 ;;		_message2r
  3937 ;;		_Option
  3938 ;;		_Record_s
  3939 ;;		_Erase
  3940 ;;		_erase
  3941 ;;		_g_erase
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _lcd_clr
  3947  0F07                     _lcd_clr:	
  3948                           
  3949                           ;PR17B.c: 286: send_config(0x01);
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  3953  0F07  3001               	movlw	1
  3954  0F08  120A  158A  272F   	fcall	_send_config
      +       120A  158A         
  3955                           
  3956                           ;PR17B.c: 287: delay(50);
  3957  0F0D  3000               	movlw	0
  3958  0F0E  00F3               	movwf	?_delay+3
  3959  0F0F  3000               	movlw	0
  3960  0F10  00F2               	movwf	?_delay+2
  3961  0F11  3000               	movlw	0
  3962  0F12  00F1               	movwf	?_delay+1
  3963  0F13  3032               	movlw	50
  3964  0F14  00F0               	movwf	?_delay
  3965  0F15  120A  158A  27B6   	fcall	_delay
  3966  0F18  0008               	return
  3967  0F19                     __end_of_lcd_clr:	
  3968                           
  3969                           	psect	text19
  3970  0F5D                     __ptext19:	
  3971 ;; *************** function _Play_s *****************
  3972 ;; Defined at:
  3973 ;;		line 666 in file "../../source file/PR17B.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;		None               void
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         0       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0
  3990 ;;      Totals:         0       0       0       0       0
  3991 ;;Total ram usage:        0 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    4
  3994 ;; This function calls:
  3995 ;;		_lcd_goto
  3996 ;;		_send_string
  3997 ;;		_tmr_delay
  3998 ;; This function is called by:
  3999 ;;		_Stand
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _Play_s
  4005  0F5D                     _Play_s:	
  4006                           
  4007                           ;PR17B.c: 667: RE2 = 0;
  4008                           
  4009                           ;incstack = 0
  4010                           ; Regs used in _Play_s: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4011  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  4013  0F5F  1109               	bcf	9,2	;volatile
  4014                           
  4015                           ;PR17B.c: 668: lcd_goto(20);
  4016  0F60  3014               	movlw	20
  4017  0F61  120A  158A  2719   	fcall	_lcd_goto
      +       120A  158A         
  4018                           
  4019                           ;PR17B.c: 669: send_string("**play**   ");
  4020  0F66  3012               	movlw	low (STR_37| (0+32768))
  4021  0F67  00F9               	movwf	?_send_string
  4022  0F68  3089               	movlw	high (STR_37| (0+32768))
  4023  0F69  00FA               	movwf	?_send_string+1
  4024  0F6A  120A  158A  27D9   	fcall	_send_string
      +       120A  158A         
  4025                           
  4026                           ;PR17B.c: 670: tmr_delay(100);
  4027  0F6F  3064               	movlw	100
  4028  0F70  00F0               	movwf	?_tmr_delay
  4029  0F71  3000               	movlw	0
  4030  0F72  00F1               	movwf	?_tmr_delay+1
  4031  0F73  120A  158A  26F5   	fcall	_tmr_delay
  4032                           
  4033                           ;PR17B.c: 671: RE2 =1;
  4034  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0F78  1509               	bsf	9,2	;volatile
  4037  0F79  0008               	return
  4038  0F7A                     __end_of_Play_s:	
  4039                           
  4040                           	psect	text20
  4041  0FD9                     __ptext20:	
  4042 ;; *************** function _send_string *****************
  4043 ;; Defined at:
  4044 ;;		line 291 in file "../../source file/PR17B.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  s               2    9[COMMON] PTR const unsigned char 
  4047 ;;		 -> STR_51(15), STR_50(7), STR_49(16), STR_48(16), 
  4048 ;;		 -> STR_47(16), STR_46(9), STR_45(12), STR_44(8), 
  4049 ;;		 -> STR_43(15), STR_42(11), STR_41(16), STR_40(16), 
  4050 ;;		 -> STR_39(16), STR_38(7), STR_37(12), STR_36(12), 
  4051 ;;		 -> STR_35(11), STR_34(17), STR_33(16), STR_32(11), 
  4052 ;;		 -> STR_31(16), STR_30(16), STR_29(13), STR_28(13), 
  4053 ;;		 -> STR_27(13), STR_26(9), STR_25(11), STR_24(17), 
  4054 ;;		 -> STR_23(14), STR_22(11), STR_21(16), STR_20(14), 
  4055 ;;		 -> STR_19(16), STR_18(16), STR_17(16), STR_16(7), 
  4056 ;;		 -> STR_15(16), STR_14(13), STR_13(16), STR_12(9), 
  4057 ;;		 -> STR_11(12), STR_10(12), STR_9(12), STR_8(11), 
  4058 ;;		 -> STR_7(12), STR_6(11), STR_5(10), STR_4(11), 
  4059 ;;		 -> STR_3(12), STR_2(13), STR_1(12), ERASE(8), 
  4060 ;;		 -> STD(13), SPI(11), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         2       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0
  4075 ;;      Totals:         2       0       0       0       0
  4076 ;;Total ram usage:        2 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    3
  4079 ;; This function calls:
  4080 ;;		_send_char
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;;		_Spi
  4084 ;;		_Stand
  4085 ;;		_Play
  4086 ;;		_Record
  4087 ;;		_message1p
  4088 ;;		_message2p
  4089 ;;		_location
  4090 ;;		_message1r
  4091 ;;		_message2r
  4092 ;;		_Forward
  4093 ;;		_Play_s
  4094 ;;		_Option
  4095 ;;		_Record_s
  4096 ;;		_Erase
  4097 ;;		_erase
  4098 ;;		_g_erase
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _send_string
  4104  0FD9                     _send_string:	
  4105  0FD9                     l1626:	
  4106                           ;PR17B.c: 293: while (s && *s)send_char (*s++);
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4110                           
  4111  0FD9  087A               	movf	send_string@s+1,w
  4112  0FDA  0479               	iorwf	send_string@s,w
  4113  0FDB  1903               	skipnz
  4114  0FDC  0008               	return
  4115  0FDD  087A               	movf	send_string@s+1,w
  4116  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0FE0  00FF               	movwf	127
  4119  0FE1  0879               	movf	send_string@s,w
  4120  0FE2  0084               	movwf	4
  4121  0FE3  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  4122  0FE8  3800               	iorlw	0
  4123  0FE9  1903               	btfsc	3,2
  4124  0FEA  0008               	return
  4125  0FEB  087A               	movf	send_string@s+1,w
  4126  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0FEE  00FF               	movwf	127
  4129  0FEF  0879               	movf	send_string@s,w
  4130  0FF0  0084               	movwf	4
  4131  0FF1  120A  158A  2000   	fcall	stringtab
      +       120A  158A         
  4132  0FF6  120A  158A  2746   	fcall	_send_char
      +       120A  158A         
  4133  0FFB  3001               	movlw	1
  4134  0FFC  07F9               	addwf	send_string@s,f
  4135  0FFD  1803               	skipnc
  4136  0FFE  0AFA               	incf	send_string@s+1,f
  4137  0FFF  2FD9               	goto	l1626
  4138  1000                     __end_of_send_string:	
  4139                           
  4140                           	psect	text21
  4141  0F46                     __ptext21:	
  4142 ;; *************** function _send_char *****************
  4143 ;; Defined at:
  4144 ;;		line 256 in file "../../source file/PR17B.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  data            1    wreg     unsigned char 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  data            1    8[COMMON] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;		None               void
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         0       0       0       0       0
  4159 ;;      Locals:         1       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0
  4161 ;;      Totals:         1       0       0       0       0
  4162 ;;Total ram usage:        1 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    2
  4165 ;; This function calls:
  4166 ;;		_delay
  4167 ;;		_e_pulse
  4168 ;; This function is called by:
  4169 ;;		_send_string
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           
  4174                           ;psect for function _send_char
  4175  0F46                     _send_char:	
  4176                           
  4177                           ;incstack = 0
  4178                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  4179                           ;send_char@data stored from wreg
  4180  0F46  00F8               	movwf	send_char@data
  4181                           
  4182                           ;PR17B.c: 257: RD6=1;
  4183  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  4185  0F49  1708               	bsf	8,6	;volatile
  4186                           
  4187                           ;PR17B.c: 258: PORTB=data;
  4188  0F4A  0878               	movf	send_char@data,w
  4189  0F4B  0086               	movwf	6	;volatile
  4190                           
  4191                           ;PR17B.c: 259: delay(50);
  4192  0F4C  3000               	movlw	0
  4193  0F4D  00F3               	movwf	?_delay+3
  4194  0F4E  3000               	movlw	0
  4195  0F4F  00F2               	movwf	?_delay+2
  4196  0F50  3000               	movlw	0
  4197  0F51  00F1               	movwf	?_delay+1
  4198  0F52  3032               	movlw	50
  4199  0F53  00F0               	movwf	?_delay
  4200  0F54  120A  158A  27B6   	fcall	_delay
      +       120A  158A         
  4201                           
  4202                           ;PR17B.c: 260: e_pulse();
  4203  0F59  120A  158A  2797   	fcall	_e_pulse
  4204  0F5C  0008               	return
  4205  0F5D                     __end_of_send_char:	
  4206                           
  4207                           	psect	text22
  4208  0F19                     __ptext22:	
  4209 ;; *************** function _lcd_goto *****************
  4210 ;; Defined at:
  4211 ;;		line 272 in file "../../source file/PR17B.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  data            1    wreg     unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  data            1   10[COMMON] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0, pclath, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         0       0       0       0       0
  4226 ;;      Locals:         1       0       0       0       0
  4227 ;;      Temps:          1       0       0       0       0
  4228 ;;      Totals:         2       0       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    3
  4232 ;; This function calls:
  4233 ;;		_send_config
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;;		_Spi
  4237 ;;		_Stand
  4238 ;;		_Play
  4239 ;;		_Record
  4240 ;;		_message1p
  4241 ;;		_message2p
  4242 ;;		_location
  4243 ;;		_message1r
  4244 ;;		_message2r
  4245 ;;		_Forward
  4246 ;;		_Play_s
  4247 ;;		_Option
  4248 ;;		_Record_s
  4249 ;;		_Erase
  4250 ;;		_erase
  4251 ;;		_g_erase
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function _lcd_goto
  4257  0F19                     _lcd_goto:	
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4261                           ;lcd_goto@data stored from wreg
  4262  0F19  00FA               	movwf	lcd_goto@data
  4263                           
  4264                           ;PR17B.c: 273: if(data<16)
  4265  0F1A  3010               	movlw	16
  4266  0F1B  027A               	subwf	lcd_goto@data,w
  4267  0F1C  1803               	skipnc
  4268  0F1D  2F24               	goto	l1616
  4269                           
  4270                           ;PR17B.c: 274: {
  4271                           ;PR17B.c: 275: send_config(0x80+data);
  4272  0F1E  087A               	movf	lcd_goto@data,w
  4273  0F1F  3E80               	addlw	128
  4274  0F20  120A  158A  272F   	fcall	_send_config
  4275                           
  4276                           ;PR17B.c: 276: }
  4277  0F23  0008               	return
  4278  0F24                     l1616:	
  4279                           
  4280                           ;PR17B.c: 277: else
  4281                           ;PR17B.c: 278: {
  4282                           ;PR17B.c: 279: data=data-20;
  4283  0F24  087A               	movf	lcd_goto@data,w
  4284  0F25  3EEC               	addlw	236
  4285  0F26  00F9               	movwf	??_lcd_goto
  4286  0F27  0879               	movf	??_lcd_goto,w
  4287  0F28  00FA               	movwf	lcd_goto@data
  4288                           
  4289                           ;PR17B.c: 280: send_config(0xc0+data);
  4290  0F29  087A               	movf	lcd_goto@data,w
  4291  0F2A  3EC0               	addlw	192
  4292  0F2B  120A  158A  272F   	fcall	_send_config
  4293  0F2E  0008               	return
  4294  0F2F                     __end_of_lcd_goto:	
  4295                           
  4296                           	psect	text23
  4297  0521                     __ptext23:	
  4298 ;; *************** function _Init *****************
  4299 ;; Defined at:
  4300 ;;		line 140 in file "../../source file/PR17B.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;		None               void
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4314 ;;      Params:         0       0       0       0       0
  4315 ;;      Locals:         0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0
  4317 ;;      Totals:         0       0       0       0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    3
  4321 ;; This function calls:
  4322 ;;		_send_config
  4323 ;;		_spi_initialize
  4324 ;;		_uc_send_receive_spi
  4325 ;;		_tmr_delay
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _Init
  4333  0521                     _Init:	
  4334                           
  4335                           ;PR17B.c: 141: TRISA = 0b00000000;
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _Init: [wreg+status,2+status,0+pclath+cstack]
  4339  0521  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0522  1303               	bcf	3,6	;RP1=0, select bank1
  4341  0523  0185               	clrf	5	;volatile
  4342                           
  4343                           ;PR17B.c: 142: TRISB = 0b00000000;
  4344  0524  0186               	clrf	6	;volatile
  4345                           
  4346                           ;PR17B.c: 143: TRISC = 0b00000000;
  4347  0525  0187               	clrf	7	;volatile
  4348                           
  4349                           ;PR17B.c: 144: TRISD = 0b00110000;
  4350  0526  3030               	movlw	48
  4351  0527  0088               	movwf	8	;volatile
  4352                           
  4353                           ;PR17B.c: 145: TRISE = 0x00;
  4354  0528  0189               	clrf	9	;volatile
  4355                           
  4356                           ;PR17B.c: 146: PORTA = 0;
  4357  0529  1283               	bcf	3,5	;RP0=0, select bank0
  4358  052A  1303               	bcf	3,6	;RP1=0, select bank0
  4359  052B  0185               	clrf	5	;volatile
  4360                           
  4361                           ;PR17B.c: 147: PORTD = 0;
  4362  052C  0188               	clrf	8	;volatile
  4363                           
  4364                           ;PR17B.c: 148: PORTE = 0;
  4365  052D  0189               	clrf	9	;volatile
  4366                           
  4367                           ;PR17B.c: 149: ADCON1 = 0b00000110;
  4368  052E  3006               	movlw	6
  4369  052F  1683               	bsf	3,5	;RP0=1, select bank1
  4370  0530  1303               	bcf	3,6	;RP1=0, select bank1
  4371  0531  009F               	movwf	31	;volatile
  4372                           
  4373                           ;PR17B.c: 150: RD3 = 1;
  4374  0532  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0533  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0534  1588               	bsf	8,3	;volatile
  4377                           
  4378                           ;PR17B.c: 151: RA0 = 1;
  4379  0535  1405               	bsf	5,0	;volatile
  4380                           
  4381                           ;PR17B.c: 152: RC0 = 1;
  4382  0536  1407               	bsf	7,0	;volatile
  4383                           
  4384                           ;PR17B.c: 153: RE2 = 1;
  4385  0537  1509               	bsf	9,2	;volatile
  4386                           
  4387                           ;PR17B.c: 155: send_config(0b00000001);
  4388  0538  3001               	movlw	1
  4389  0539  120A  158A  272F   	fcall	_send_config
      +       120A  118A         
  4390                           
  4391                           ;PR17B.c: 156: send_config(0b00000010);
  4392  053E  3002               	movlw	2
  4393  053F  120A  158A  272F   	fcall	_send_config
      +       120A  118A         
  4394                           
  4395                           ;PR17B.c: 157: send_config(0b00000110);
  4396  0544  3006               	movlw	6
  4397  0545  120A  158A  272F   	fcall	_send_config
      +       120A  118A         
  4398                           
  4399                           ;PR17B.c: 158: send_config(0b00001100);
  4400  054A  300C               	movlw	12
  4401  054B  120A  158A  272F   	fcall	_send_config
      +       120A  118A         
  4402                           
  4403                           ;PR17B.c: 159: send_config(0b00111000);
  4404  0550  3038               	movlw	56
  4405  0551  120A  158A  272F   	fcall	_send_config
      +       120A  118A         
  4406                           
  4407                           ;PR17B.c: 163: T0CS = 0;
  4408  0556  1683               	bsf	3,5	;RP0=1, select bank1
  4409  0557  1303               	bcf	3,6	;RP1=0, select bank1
  4410  0558  1281               	bcf	1,5	;volatile
  4411                           
  4412                           ;PR17B.c: 164: PSA = 0;
  4413  0559  1181               	bcf	1,3	;volatile
  4414                           
  4415                           ;PR17B.c: 165: PS2 = 1;
  4416  055A  1501               	bsf	1,2	;volatile
  4417                           
  4418                           ;PR17B.c: 166: PS1 = 1;
  4419  055B  1481               	bsf	1,1	;volatile
  4420                           
  4421                           ;PR17B.c: 167: PS0 = 1;
  4422  055C  1401               	bsf	1,0	;volatile
  4423                           
  4424                           ;PR17B.c: 169: spi_initialize();
  4425  055D  120A  158A  26D5   	fcall	_spi_initialize
      +       120A  118A         
  4426                           
  4427                           ;PR17B.c: 172: RE1 = 0;
  4428  0562  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0563  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0564  1089               	bcf	9,1	;volatile
  4431                           
  4432                           ;PR17B.c: 173: uc_send_receive_spi(0b10000000);
  4433  0565  3080               	movlw	128
  4434  0566  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  4435                           
  4436                           ;PR17B.c: 174: uc_send_receive_spi(0b00000000);
  4437  056B  3000               	movlw	0
  4438  056C  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  4439                           
  4440                           ;PR17B.c: 175: RE1 = 1;
  4441  0571  1283               	bcf	3,5	;RP0=0, select bank0
  4442  0572  1303               	bcf	3,6	;RP1=0, select bank0
  4443  0573  1489               	bsf	9,1	;volatile
  4444                           
  4445                           ;PR17B.c: 177: tmr_delay(10);
  4446  0574  300A               	movlw	10
  4447  0575  00F0               	movwf	?_tmr_delay
  4448  0576  3000               	movlw	0
  4449  0577  00F1               	movwf	?_tmr_delay+1
  4450  0578  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  4451                           
  4452                           ;PR17B.c: 179: RE1 = 0;
  4453  057D  1283               	bcf	3,5	;RP0=0, select bank0
  4454  057E  1303               	bcf	3,6	;RP1=0, select bank0
  4455  057F  1089               	bcf	9,1	;volatile
  4456                           
  4457                           ;PR17B.c: 180: uc_send_receive_spi(0b11000000);
  4458  0580  30C0               	movlw	192
  4459  0581  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  4460                           
  4461                           ;PR17B.c: 181: uc_send_receive_spi(0b00000000);
  4462  0586  3000               	movlw	0
  4463  0587  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  4464                           
  4465                           ;PR17B.c: 182: RE1 = 1;
  4466  058C  1283               	bcf	3,5	;RP0=0, select bank0
  4467  058D  1303               	bcf	3,6	;RP1=0, select bank0
  4468  058E  1489               	bsf	9,1	;volatile
  4469                           
  4470                           ;PR17B.c: 184: tmr_delay(10);
  4471  058F  300A               	movlw	10
  4472  0590  00F0               	movwf	?_tmr_delay
  4473  0591  3000               	movlw	0
  4474  0592  00F1               	movwf	?_tmr_delay+1
  4475  0593  120A  158A  26F5   	fcall	_tmr_delay
      +       120A  118A         
  4476                           
  4477                           ;PR17B.c: 186: RE1 = 0;
  4478  0598  1283               	bcf	3,5	;RP0=0, select bank0
  4479  0599  1303               	bcf	3,6	;RP1=0, select bank0
  4480  059A  1089               	bcf	9,1	;volatile
  4481                           
  4482                           ;PR17B.c: 187: uc_send_receive_spi(0b11100000);
  4483  059B  30E0               	movlw	224
  4484  059C  120A  158A  26C8   	fcall	_uc_send_receive_spi
      +       120A  118A         
  4485                           
  4486                           ;PR17B.c: 188: uc_send_receive_spi(0b00000000);
  4487  05A1  3000               	movlw	0
  4488  05A2  120A  158A  26C8   	fcall	_uc_send_receive_spi
  4489                           
  4490                           ;PR17B.c: 189: RE1 = 1;
  4491  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  4492  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  4493  05A7  1489               	bsf	9,1	;volatile
  4494  05A8  0008               	return
  4495  05A9                     __end_of_Init:	
  4496                           
  4497                           	psect	text24
  4498  0EF5                     __ptext24:	
  4499 ;; *************** function _tmr_delay *****************
  4500 ;; Defined at:
  4501 ;;		line 239 in file "../../source file/PR17B.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  lenght          2    0[COMMON] unsigned short 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;		None               void
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4515 ;;      Params:         2       0       0       0       0
  4516 ;;      Locals:         0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0
  4518 ;;      Totals:         2       0       0       0       0
  4519 ;;Total ram usage:        2 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_Init
  4525 ;;		_Spi
  4526 ;;		_message1p
  4527 ;;		_message2p
  4528 ;;		_message1r
  4529 ;;		_message2r
  4530 ;;		_analog
  4531 ;;		_mic
  4532 ;;		_Forward
  4533 ;;		_Play_s
  4534 ;;		_erase
  4535 ;;		_g_erase
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function _tmr_delay
  4541  0EF5                     _tmr_delay:	
  4542                           
  4543                           ;PR17B.c: 240: for( ;lenght>0;lenght-=1)
  4544                           
  4545                           ;incstack = 0
  4546                           ; Regs used in _tmr_delay: [wreg+status,2+status,0]
  4547  0EF5  0871               	movf	tmr_delay@lenght+1,w
  4548  0EF6  0470               	iorwf	tmr_delay@lenght,w
  4549  0EF7  1903               	btfsc	3,2
  4550  0EF8  0008               	return
  4551                           
  4552                           ;PR17B.c: 241: {
  4553                           ;PR17B.c: 242: TMR0=0;
  4554  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  4556  0EFB  0181               	clrf	1	;volatile
  4557  0EFC                     l1504:	
  4558                           ;PR17B.c: 243: while(TMR0<195);
  4559                           
  4560  0EFC  30C3               	movlw	195
  4561  0EFD  0201               	subwf	1,w	;volatile
  4562  0EFE  1C03               	skipc
  4563  0EFF  2EFC               	goto	l1504
  4564  0F00  3001               	movlw	1
  4565  0F01  02F0               	subwf	tmr_delay@lenght,f
  4566  0F02  3000               	movlw	0
  4567  0F03  1C03               	skipc
  4568  0F04  03F1               	decf	tmr_delay@lenght+1,f
  4569  0F05  02F1               	subwf	tmr_delay@lenght+1,f
  4570  0F06  2EF5               	goto	_tmr_delay
  4571  0F07                     __end_of_tmr_delay:	
  4572                           
  4573                           	psect	text25
  4574  0EC8                     __ptext25:	
  4575 ;; *************** function _uc_send_receive_spi *****************
  4576 ;; Defined at:
  4577 ;;		line 221 in file "../../source file/PR17B.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  uc_data         1    wreg     unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  uc_data         1    0[COMMON] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      unsigned char 
  4584 ;; Registers used:
  4585 ;;		wreg
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4591 ;;      Params:         0       0       0       0       0
  4592 ;;      Locals:         1       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0
  4594 ;;      Totals:         1       0       0       0       0
  4595 ;;Total ram usage:        1 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_Init
  4601 ;;		_Spi
  4602 ;;		_Stand
  4603 ;;		_message1p
  4604 ;;		_message2p
  4605 ;;		_message1r
  4606 ;;		_message2r
  4607 ;;		_analog
  4608 ;;		_mic
  4609 ;;		_erase
  4610 ;;		_g_erase
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _uc_send_receive_spi
  4616  0EC8                     _uc_send_receive_spi:	
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _uc_send_receive_spi: [wreg]
  4620                           ;uc_send_receive_spi@uc_data stored from wreg
  4621  0EC8  00F0               	movwf	uc_send_receive_spi@uc_data
  4622                           
  4623                           ;PR17B.c: 224: SSPBUF = uc_data;
  4624  0EC9  0870               	movf	uc_send_receive_spi@uc_data,w
  4625  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  4626  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  4627  0ECC  0093               	movwf	19	;volatile
  4628  0ECD                     l169:	
  4629                           ;PR17B.c: 227: while(BF == 0);
  4630                           
  4631  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  4632  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  4633  0ECF  1C14               	btfss	20,0	;volatile
  4634  0ED0  2ECD               	goto	l169
  4635                           
  4636                           ;PR17B.c: 230: return SSPBUF;
  4637                           ;	Return value of _uc_send_receive_spi is never used
  4638  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0ED3  0813               	movf	19,w	;volatile
  4641  0ED4  0008               	return
  4642  0ED5                     __end_of_uc_send_receive_spi:	
  4643                           
  4644                           	psect	text26
  4645  0ED5                     __ptext26:	
  4646 ;; *************** function _spi_initialize *****************
  4647 ;; Defined at:
  4648 ;;		line 194 in file "../../source file/PR17B.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		None
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4662 ;;      Params:         0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_Init
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _spi_initialize
  4677  0ED5                     _spi_initialize:	
  4678                           
  4679                           ;PR17B.c: 196: TRISC5 = 0;
  4680                           
  4681                           ;incstack = 0
  4682                           ; Regs used in _spi_initialize: []
  4683  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  4684  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  4685  0ED7  1287               	bcf	7,5	;volatile
  4686                           
  4687                           ;PR17B.c: 199: SMP = 0;
  4688  0ED8  1394               	bcf	20,7	;volatile
  4689                           
  4690                           ;PR17B.c: 202: CKE = 0;
  4691  0ED9  1314               	bcf	20,6	;volatile
  4692                           
  4693                           ;PR17B.c: 203: CKP = 1;
  4694  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0EDC  1614               	bsf	20,4	;volatile
  4697                           
  4698                           ;PR17B.c: 206: SSPM3 = 0;
  4699  0EDD  1194               	bcf	20,3	;volatile
  4700                           
  4701                           ;PR17B.c: 207: SSPM2 = 0;
  4702  0EDE  1114               	bcf	20,2	;volatile
  4703                           
  4704                           ;PR17B.c: 208: SSPM1 = 0;
  4705  0EDF  1094               	bcf	20,1	;volatile
  4706                           
  4707                           ;PR17B.c: 209: SSPM0 = 0;
  4708  0EE0  1014               	bcf	20,0	;volatile
  4709                           
  4710                           ;PR17B.c: 212: WCOL = 0;
  4711  0EE1  1394               	bcf	20,7	;volatile
  4712                           
  4713                           ;PR17B.c: 215: SSPEN = 1;
  4714  0EE2  1694               	bsf	20,5	;volatile
  4715  0EE3  0008               	return
  4716  0EE4                     __end_of_spi_initialize:	
  4717                           
  4718                           	psect	text27
  4719  0F2F                     __ptext27:	
  4720 ;; *************** function _send_config *****************
  4721 ;; Defined at:
  4722 ;;		line 248 in file "../../source file/PR17B.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  data            1    wreg     unsigned char 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  data            1    8[COMMON] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;		None               void
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4736 ;;      Params:         0       0       0       0       0
  4737 ;;      Locals:         1       0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0
  4739 ;;      Totals:         1       0       0       0       0
  4740 ;;Total ram usage:        1 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    2
  4743 ;; This function calls:
  4744 ;;		_delay
  4745 ;;		_e_pulse
  4746 ;; This function is called by:
  4747 ;;		_Init
  4748 ;;		_lcd_goto
  4749 ;;		_lcd_clr
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _send_config
  4755  0F2F                     _send_config:	
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  4759                           ;send_config@data stored from wreg
  4760  0F2F  00F8               	movwf	send_config@data
  4761                           
  4762                           ;PR17B.c: 249: RD6=0;
  4763  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0F32  1308               	bcf	8,6	;volatile
  4766                           
  4767                           ;PR17B.c: 250: PORTB=data;
  4768  0F33  0878               	movf	send_config@data,w
  4769  0F34  0086               	movwf	6	;volatile
  4770                           
  4771                           ;PR17B.c: 251: delay(50);
  4772  0F35  3000               	movlw	0
  4773  0F36  00F3               	movwf	?_delay+3
  4774  0F37  3000               	movlw	0
  4775  0F38  00F2               	movwf	?_delay+2
  4776  0F39  3000               	movlw	0
  4777  0F3A  00F1               	movwf	?_delay+1
  4778  0F3B  3032               	movlw	50
  4779  0F3C  00F0               	movwf	?_delay
  4780  0F3D  120A  158A  27B6   	fcall	_delay
      +       120A  158A         
  4781                           
  4782                           ;PR17B.c: 252: e_pulse();
  4783  0F42  120A  158A  2797   	fcall	_e_pulse
  4784  0F45  0008               	return
  4785  0F46                     __end_of_send_config:	
  4786                           
  4787                           	psect	text28
  4788  0F97                     __ptext28:	
  4789 ;; *************** function _e_pulse *****************
  4790 ;; Defined at:
  4791 ;;		line 264 in file "../../source file/PR17B.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;		None               void
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, pclath, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         0       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0
  4808 ;;      Totals:         0       0       0       0       0
  4809 ;;Total ram usage:        0 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    1
  4812 ;; This function calls:
  4813 ;;		_delay
  4814 ;; This function is called by:
  4815 ;;		_send_config
  4816 ;;		_send_char
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _e_pulse
  4822  0F97                     _e_pulse:	
  4823                           
  4824                           ;PR17B.c: 265: RD7=1;
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _e_pulse: [wreg+status,2+status,0+pclath+cstack]
  4828  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0F99  1788               	bsf	8,7	;volatile
  4831                           
  4832                           ;PR17B.c: 266: delay(50);
  4833  0F9A  3000               	movlw	0
  4834  0F9B  00F3               	movwf	?_delay+3
  4835  0F9C  3000               	movlw	0
  4836  0F9D  00F2               	movwf	?_delay+2
  4837  0F9E  3000               	movlw	0
  4838  0F9F  00F1               	movwf	?_delay+1
  4839  0FA0  3032               	movlw	50
  4840  0FA1  00F0               	movwf	?_delay
  4841  0FA2  120A  158A  27B6   	fcall	_delay
      +       120A  158A         
  4842                           
  4843                           ;PR17B.c: 267: RD7=0;
  4844  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0FA9  1388               	bcf	8,7	;volatile
  4847                           
  4848                           ;PR17B.c: 268: delay(50);
  4849  0FAA  3000               	movlw	0
  4850  0FAB  00F3               	movwf	?_delay+3
  4851  0FAC  3000               	movlw	0
  4852  0FAD  00F2               	movwf	?_delay+2
  4853  0FAE  3000               	movlw	0
  4854  0FAF  00F1               	movwf	?_delay+1
  4855  0FB0  3032               	movlw	50
  4856  0FB1  00F0               	movwf	?_delay
  4857  0FB2  120A  158A  27B6   	fcall	_delay
  4858  0FB5  0008               	return
  4859  0FB6                     __end_of_e_pulse:	
  4860                           
  4861                           	psect	text29
  4862  0FB6                     __ptext29:	
  4863 ;; *************** function _delay *****************
  4864 ;; Defined at:
  4865 ;;		line 234 in file "../../source file/PR17B.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  data            4    0[COMMON] unsigned long 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;		None               void
  4872 ;; Registers used:
  4873 ;;		wreg
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4879 ;;      Params:         4       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0
  4881 ;;      Temps:          4       0       0       0       0
  4882 ;;      Totals:         8       0       0       0       0
  4883 ;;Total ram usage:        8 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_send_config
  4889 ;;		_send_char
  4890 ;;		_e_pulse
  4891 ;;		_lcd_clr
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           
  4896                           ;psect for function _delay
  4897  0FB6                     _delay:	
  4898                           
  4899                           ;PR17B.c: 235: for( ;data>0;data-=1);
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in _delay: [wreg]
  4903  0FB6  0873               	movf	delay@data+3,w
  4904  0FB7  0472               	iorwf	delay@data+2,w
  4905  0FB8  0471               	iorwf	delay@data+1,w
  4906  0FB9  0470               	iorwf	delay@data,w
  4907  0FBA  1903               	btfsc	3,2
  4908  0FBB  0008               	return
  4909  0FBC  3001               	movlw	1
  4910  0FBD  00F4               	movwf	??_delay
  4911  0FBE  3000               	movlw	0
  4912  0FBF  00F5               	movwf	??_delay+1
  4913  0FC0  3000               	movlw	0
  4914  0FC1  00F6               	movwf	??_delay+2
  4915  0FC2  3000               	movlw	0
  4916  0FC3  00F7               	movwf	??_delay+3
  4917  0FC4  0874               	movf	??_delay,w
  4918  0FC5  02F0               	subwf	delay@data,f
  4919  0FC6  0875               	movf	??_delay+1,w
  4920  0FC7  1C03               	skipc
  4921  0FC8  0F75               	incfsz	??_delay+1,w
  4922  0FC9  2FCB               	goto	u555
  4923  0FCA  2FCC               	goto	u556
  4924  0FCB                     u555:	
  4925  0FCB  02F1               	subwf	delay@data+1,f
  4926  0FCC                     u556:	
  4927  0FCC  0876               	movf	??_delay+2,w
  4928  0FCD  1C03               	skipc
  4929  0FCE  0F76               	incfsz	??_delay+2,w
  4930  0FCF  2FD1               	goto	u557
  4931  0FD0  2FD2               	goto	u558
  4932  0FD1                     u557:	
  4933  0FD1  02F2               	subwf	delay@data+2,f
  4934  0FD2                     u558:	
  4935  0FD2  0877               	movf	??_delay+3,w
  4936  0FD3  1C03               	skipc
  4937  0FD4  0F77               	incfsz	??_delay+3,w
  4938  0FD5  2FD7               	goto	u559
  4939  0FD6  2FB6               	goto	_delay
  4940  0FD7                     u559:	
  4941  0FD7  02F3               	subwf	delay@data+3,f
  4942  0FD8  2FB6               	goto	_delay
  4943  0FD9                     __end_of_delay:	
  4944  007E                     btemp	set	126	;btemp
  4945  007E                     wtemp0	set	126


Data Sizes:
    Strings     402
    Constant    32
    Data        8
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_string@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_51(CODE[15]), STR_50(CODE[7]), STR_49(CODE[16]), STR_48(CODE[16]), 
		 -> STR_47(CODE[16]), STR_46(CODE[9]), STR_45(CODE[12]), STR_44(CODE[8]), 
		 -> STR_43(CODE[15]), STR_42(CODE[11]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[16]), STR_38(CODE[7]), STR_37(CODE[12]), STR_36(CODE[12]), 
		 -> STR_35(CODE[11]), STR_34(CODE[17]), STR_33(CODE[16]), STR_32(CODE[11]), 
		 -> STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[13]), STR_28(CODE[13]), 
		 -> STR_27(CODE[13]), STR_26(CODE[9]), STR_25(CODE[11]), STR_24(CODE[17]), 
		 -> STR_23(CODE[14]), STR_22(CODE[11]), STR_21(CODE[16]), STR_20(CODE[14]), 
		 -> STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[16]), STR_16(CODE[7]), 
		 -> STR_15(CODE[16]), STR_14(CODE[13]), STR_13(CODE[16]), STR_12(CODE[9]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[12]), STR_2(CODE[13]), STR_1(CODE[12]), ERASE(CODE[8]), 
		 -> STD(CODE[13]), SPI(CODE[11]), 

    mode	PTR const unsigned char [4] size(2) Largest target is 13
		 -> ERASE(CODE[8]), STD(CODE[13]), SPI(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Stand
    _Spi->_Record
    _Play->_lcd_goto
    _Play->_send_string
    _message1p->_lcd_goto
    _message1p->_send_string
    _message2p->_lcd_goto
    _message2p->_send_string
    _analog->_location
    _mic->_location
    _location->_lcd_goto
    _location->_send_string
    _message1r->_lcd_goto
    _message1r->_send_string
    _message2r->_lcd_goto
    _message2r->_send_string
    _Erase->_lcd_goto
    _Erase->_send_string
    _erase->_lcd_goto
    _erase->_send_string
    _g_erase->_lcd_goto
    _g_erase->_send_string
    _Stand->_Option
    _Forward->_lcd_goto
    _Forward->_send_string
    _Option->_lcd_goto
    _Option->_send_string
    _Record_s->_lcd_goto
    _Record_s->_send_string
    _lcd_clr->_send_config
    _Play_s->_lcd_goto
    _Play_s->_send_string
    _send_string->_send_char
    _send_char->_delay
    _lcd_goto->_send_config
    _Init->_send_config
    _send_config->_delay
    _e_pulse->_delay

Critical Paths under _main in BANK0

    _main->_Spi
    _Spi->_Record

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11930
                                              3 BANK0      2     2      0
                               _Init
                            _lcd_clr
                           _lcd_goto
                        _send_string
                              _Stand
                              _Erase
                                _Spi
 ---------------------------------------------------------------------------------
 (1) _Spi                                                  2     2      0    6750
                                              1 BANK0      2     2      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
                             _Record
                               _Play
 ---------------------------------------------------------------------------------
 (2) _Play                                                 2     2      0    1793
                                             11 COMMON     2     2      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                          _message2p
                          _message1p
 ---------------------------------------------------------------------------------
 (3) _message1p                                            0     0      0     604
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (3) _message2p                                            0     0      0     604
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (2) _Record                                               2     2      0    4305
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                                _mic
                             _analog
 ---------------------------------------------------------------------------------
 (3) _analog                                               0     0      0    1860
                _uc_send_receive_spi
                          _tmr_delay
                           _location
 ---------------------------------------------------------------------------------
 (3) _mic                                                  0     0      0    1860
                _uc_send_receive_spi
                          _tmr_delay
                           _location
 ---------------------------------------------------------------------------------
 (4) _location                                             2     2      0    1793
                                             11 COMMON     2     2      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                          _message2r
                          _message1r
 ---------------------------------------------------------------------------------
 (5) _message1r                                            0     0      0     604
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (5) _message2r                                            0     0      0     604
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (1) _Erase                                                2     2      0    1793
                                             11 COMMON     2     2      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                            _g_erase
                              _erase
 ---------------------------------------------------------------------------------
 (2) _erase                                                0     0      0     604
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (2) _g_erase                                              0     0      0     604
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (1) _Stand                                                2     2      0    2579
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                _uc_send_receive_spi
                             _Play_s
                             _Option
                            _Forward
 ---------------------------------------------------------------------------------
 (2) _Forward                                              0     0      0     425
                           _lcd_goto
                        _send_string
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (2) _Option                                               2     2      0    1122
                                             11 COMMON     2     2      0
                            _lcd_clr
                           _lcd_goto
                        _send_string
                           _Record_s
 ---------------------------------------------------------------------------------
 (3) _Record_s                                             0     0      0     537
                            _lcd_clr
                           _lcd_goto
                        _send_string
 ---------------------------------------------------------------------------------
 (4) _lcd_clr                                              0     0      0     157
                        _send_config
                              _delay
 ---------------------------------------------------------------------------------
 (2) _Play_s                                               0     0      0     425
                           _lcd_goto
                        _send_string
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (4) _send_string                                          2     0      2     179
                                              9 COMMON     2     0      2
                          _send_char
 ---------------------------------------------------------------------------------
 (5) _send_char                                            1     1      0     112
                                              8 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (4) _lcd_goto                                             2     2      0     201
                                              9 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0     179
                        _send_config
                     _spi_initialize
                _uc_send_receive_spi
                          _tmr_delay
 ---------------------------------------------------------------------------------
 (4) _tmr_delay                                            2     0      2      45
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _uc_send_receive_spi                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spi_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_config                                          1     1      0     112
                                              8 COMMON     1     1      0
                              _delay
                            _e_pulse
 ---------------------------------------------------------------------------------
 (6) _e_pulse                                              0     0      0      45
                              _delay
 ---------------------------------------------------------------------------------
 (7) _delay                                                8     4      4      45
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
     _send_config
       _delay
       _e_pulse
         _delay
     _spi_initialize
     _uc_send_receive_spi
     _tmr_delay
   _lcd_clr
     _send_config
       _delay
       _e_pulse
         _delay
     _delay
   _lcd_goto
     _send_config
       _delay
       _e_pulse
         _delay
   _send_string
     _send_char
       _delay
       _e_pulse
         _delay
   _Stand
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_string
       _send_char
         _delay
         _e_pulse
           _delay
     _uc_send_receive_spi
     _Play_s
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _tmr_delay
     _Option
       _lcd_clr
         _send_config
           _delay
           _e_pulse
             _delay
         _delay
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _Record_s
         _lcd_clr
           _send_config
             _delay
             _e_pulse
               _delay
           _delay
         _lcd_goto
           _send_config
             _delay
             _e_pulse
               _delay
         _send_string
           _send_char
             _delay
             _e_pulse
               _delay
     _Forward
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _tmr_delay
   _Erase
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_string
       _send_char
         _delay
         _e_pulse
           _delay
     _g_erase
       _lcd_clr
         _send_config
           _delay
           _e_pulse
             _delay
         _delay
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _uc_send_receive_spi
       _tmr_delay
     _erase
       _lcd_clr
         _send_config
           _delay
           _e_pulse
             _delay
         _delay
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _uc_send_receive_spi
       _tmr_delay
   _Spi
     _lcd_clr
       _send_config
         _delay
         _e_pulse
           _delay
       _delay
     _lcd_goto
       _send_config
         _delay
         _e_pulse
           _delay
     _send_string
       _send_char
         _delay
         _e_pulse
           _delay
     _uc_send_receive_spi
     _tmr_delay
     _Record
       _lcd_clr
         _send_config
           _delay
           _e_pulse
             _delay
         _delay
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _mic
         _uc_send_receive_spi
         _tmr_delay
         _location
           _lcd_clr
             _send_config
               _delay
               _e_pulse
                 _delay
             _delay
           _lcd_goto
             _send_config
               _delay
               _e_pulse
                 _delay
           _send_string
             _send_char
               _delay
               _e_pulse
                 _delay
           _message2r
             _lcd_clr
               _send_config
                 _delay
                 _e_pulse
                   _delay
               _delay
             _lcd_goto
               _send_config
                 _delay
                 _e_pulse
                   _delay
             _send_string
               _send_char
                 _delay
                 _e_pulse
                   _delay
             _uc_send_receive_spi
             _tmr_delay
           _message1r
             _lcd_clr
               _send_config
                 _delay
                 _e_pulse
                   _delay
               _delay
             _lcd_goto
               _send_config
                 _delay
                 _e_pulse
                   _delay
             _send_string
               _send_char
                 _delay
                 _e_pulse
                   _delay
             _uc_send_receive_spi
             _tmr_delay
       _analog
         _uc_send_receive_spi
         _tmr_delay
         _location
           _lcd_clr
             _send_config
               _delay
               _e_pulse
                 _delay
             _delay
           _lcd_goto
             _send_config
               _delay
               _e_pulse
                 _delay
           _send_string
             _send_char
               _delay
               _e_pulse
                 _delay
           _message2r
             _lcd_clr
               _send_config
                 _delay
                 _e_pulse
                   _delay
               _delay
             _lcd_goto
               _send_config
                 _delay
                 _e_pulse
                   _delay
             _send_string
               _send_char
                 _delay
                 _e_pulse
                   _delay
             _uc_send_receive_spi
             _tmr_delay
           _message1r
             _lcd_clr
               _send_config
                 _delay
                 _e_pulse
                   _delay
               _delay
             _lcd_goto
               _send_config
                 _delay
                 _e_pulse
                   _delay
             _send_string
               _send_char
                 _delay
                 _e_pulse
                   _delay
             _uc_send_receive_spi
             _tmr_delay
     _Play
       _lcd_clr
         _send_config
           _delay
           _e_pulse
             _delay
         _delay
       _lcd_goto
         _send_config
           _delay
           _e_pulse
             _delay
       _send_string
         _send_char
           _delay
           _e_pulse
             _delay
       _message2p
         _lcd_clr
           _send_config
             _delay
             _e_pulse
               _delay
           _delay
         _lcd_goto
           _send_config
             _delay
             _e_pulse
               _delay
         _send_string
           _send_char
             _delay
             _e_pulse
               _delay
         _uc_send_receive_spi
         _tmr_delay
       _message1p
         _lcd_clr
           _send_config
             _delay
             _e_pulse
               _delay
           _delay
         _lcd_goto
           _send_config
             _delay
             _e_pulse
               _delay
         _send_string
           _send_char
             _delay
             _e_pulse
               _delay
         _uc_send_receive_spi
         _tmr_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       9       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jul 02 11:14:42 2015

        ?_uc_send_receive_spi 0070                             pc 0002                   __CFG_CP$OFF 0000  
                          _BF 04A0                            fsr 0004                           l310 01F2  
                         l214 06A4                           l150 0610                           l311 01CA  
                         l223 06A8                           l215 0678                           l145 05E1  
                         l236 07C7                           l404 018A                           l260 025E  
                         l237 078E                           l261 0236                           l350 03A8  
                         l246 07CB                           l422 0090                           l351 0380  
                         l319 01F6                           l416 00DB                           l169 0ECD  
                         l282 0504                           l363 03AF                           l291 0508  
                         l283 04D8                           l372 00DC                           l365 03B8  
                         l269 0262                           l383 010E                           l359 03AC  
                         l376 00E2                           l386 0134                           l379 0108  
                         l395 0186                           l396 015E                           _CKE 04A6  
                         _CKP 00A4                           _RA0 0028                           _RC0 0038  
                         _RE1 0049                           _RD3 0043                           _RE2 004A  
                         _RD4 0044                           _RD5 0045                           _RD6 0046  
                         _RD7 0047                           _PS0 0408                           _PS1 0409  
                         _PS2 040A                  __CFG_CPD$OFF 0000                           u555 0FCB  
                         u556 0FCC                           u557 0FD1                           u558 0FD2  
                         u559 0FD7                           _PSA 040B                           _SPI 081F  
                         _SMP 04A7                           _STD 0812                           _Spi 0631  
                         _mic 0009                           _msg 002D                           fsr0 0004  
                         indf 0000                  __CFG_FOSC$HS 0000               send_config@data 0078  
                __CFG_LVP$OFF 0000                          ?_Spi 0070                          l2000 04EF  
                        l2010 0511                          l2004 04FD                          l2014 051B  
                        l2008 050B                          l2042 069D                          l2052 06BB  
                        l2036 0685                          l2028 0674                          l2046 06AB  
                        l2038 068F                          l1504 0EFC                          l2048 06B1  
                        l2090 0619                          l2092 061F                          l2084 060C  
                        l2068 05DD                          l1616 0F24                          l2088 0613  
                        l2096 0628                          l1626 0FD9                          l1900 0207  
                        l1822 0259                          l1920 079B                          l1912 078A  
                        l1832 0273                          l1816 0243                          l1808 0232  
                        l1850 038D                          l1842 037C                          l1922 07A5  
                        l1826 0265                          l1818 024D                          l1852 0397  
                        l1932 07CE                          l1940 07E4                          l1924 07AF  
                        l1828 026B                          l1934 07D4                          l1782 016B  
                        l1774 015A                          l1856 03A3                          l1936 07DA  
                        l1928 07BD                          l1792 018D                          l1784 0175  
                        l1866 03C3                          l1794 0193                          l1890 01ED  
                        l1788 0181                          l1884 01D7                          l1876 01C6  
                        l1798 019B                          l1894 01F9                          l1886 01E1  
                        l1990 04D4                          l1896 01FF                          ?_mic 0070  
                        l1998 04E5                          STR_1 095A                          STR_2 08DF  
                        STR_3 094E                          STR_4 0966                          STR_5 0992  
                        STR_6 0966                          STR_7 094E                          STR_8 0987  
                        STR_9 0906                          _T0CS 040D                          _TMR0 0001  
                        _WCOL 00A7                          _Init 0521                          Spi@i 002A  
                __CFG_WRT$OFF 0000                          _Play 020D                          _main 05A9  
                        _mode 0020                          btemp 007E                  lcd_goto@data 007A  
                        start 0000         ??_uc_send_receive_spi 0070               __end_of_Forward 0F97  
                       ??_Spi 0029                         ??_mic 007D                         ?_Init 0070  
             tmr_delay@lenght 0070                         ?_Play 0070                         ?_main 0070  
                       STR_10 091E                         STR_11 092A                         STR_12 09A5  
                       STR_20 08D1                         STR_21 0873                         STR_13 0863  
                       STR_22 0971                         STR_14 08F9                         STR_30 0883  
                       STR_15 0863                         STR_31 0873                         STR_23 08D1  
                       STR_40 0843                         STR_32 0971                         STR_16 09BD  
                       STR_24 0832                         STR_25 0971                         STR_33 0883  
                       STR_41 08A3                         STR_17 08A3                 __CFG_WDTE$OFF 0000  
                       STR_34 0832                         STR_26 09A5                         STR_50 09B6  
                       STR_42 097C                         STR_18 0843                         STR_35 0971  
                       STR_19 08A3                         STR_27 08EC                         STR_43 08C2  
                       STR_51 08B3                         STR_28 08F9                         STR_44 09AE  
                       STR_36 0936                         STR_29 08EC                         STR_45 0942  
                       STR_37 0912                         STR_38 09BD                         STR_46 099C  
                       STR_39 08A3                         STR_47 0853                         STR_48 0893  
                       STR_49 0853                         _ERASE 082A                __CFG_DEBUG$OFF 0000  
                       _PORTA 0005                         _PORTB 0006                         _PORTD 0008  
                       _PORTE 0009                         _SSPM0 00A0                         _SSPM1 00A1  
                       _SSPM2 00A2                         _SSPM3 00A3                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _SSPEN 00A5               __end_of_g_erase 0091  
                       _Erase 0135                         Play@i 007C                 __CFG_PWRTE$ON 0000  
             __end_of_e_pulse 0FB6               __end_of_lcd_clr 0F19                         _Stand 0753  
                       _delay 0FB6                         _erase 0091                         main@j 002C  
              __CFG_BOREN$OFF 0000                         pclath 000A                         status 0003  
                       wtemp0 007E               __initialization 07ED                  __end_of_Init 05A9  
                __end_of_Play 0279                  __end_of_main 0631                        ??_Init 0079  
                      ??_Play 007B              __end_of_Record_s 0135                        ??_main 002B  
                      ?_Erase 0070                        ?_Stand 0070                        ?_delay 0070  
                ?_send_config 0070                        _ADCON1 009F                        ?_erase 0070  
                ?_send_string 0079                        Erase@i 007C                        _TRISC5 043D  
                      _SSPBUF 0013                     ??_Forward 007B                        _Record 04AD  
                      _Play_s 0F5D                        _Option 0357                        Stand@i 0028  
            __end_of_lcd_goto 0F2F                        _analog 06C1                     ??_g_erase 007B  
            __end_of_location 020D                     ??_e_pulse 0078                        _status 002F  
                   ??_lcd_clr 0079              ??_spi_initialize 0070       __end_of__initialization 07FC  
               __end_of_ERASE 0832                 __end_of_Erase 01A1                __pcstackCOMMON 0070  
               __end_of_Stand 07ED                  __pidataBANK0 0EC0                 __end_of_delay 0FD9  
               __end_of_erase 00DC                       ??_Erase 007B                       ??_Stand 007D  
                     ??_delay 0074                       ??_erase 007B                    __pbssBANK0 002D  
                   ?_Record_s 0070                       ?_Record 0070            __size_of_message1p 006F  
          __size_of_message1r 0072            __size_of_message2p 006F            __size_of_message2r 0072  
                     ?_Play_s 0070                    __pmaintext 05A9                       ?_Option 0070  
                     ?_analog 0070            __size_of_send_char 0017            __size_of_tmr_delay 0012  
                   ?_lcd_goto 0070                    __stringtab 0800          __size_of_send_config 0017  
                   ?_location 0070                       Record@i 0028   __end_of_uc_send_receive_spi 0ED5  
        __size_of_send_string 0027                    ??_Record_s 007B                       _Forward 0F7A  
             __size_of_Record 0074               __size_of_Play_s 001D                       Option@i 007C  
             __size_of_Option 0072               __size_of_analog 0092                       _g_erase 0046  
                     _e_pulse 0F97                       __ptext1 0631                       __ptext2 020D  
                     __ptext3 02E8                       __ptext4 0279                       __ptext5 04AD  
                     __ptext6 06C1                       __ptext7 0009                       __ptext8 01A1  
                     __ptext9 043B                       _lcd_clr 0F07                  __size_of_Spi 0090  
                __size_of_mic 003D             __end_of_message1p 0357             __end_of_message1r 04AD  
           __end_of_message2p 02E8             __end_of_message2r 043B                       _pointer 002E  
                  ??_lcd_goto 0079          end_of_initialization 07FC             __end_of_send_char 0F5D  
                  ??_location 007B             __end_of_tmr_delay 0F07                  __pstringtext 0800  
               send_char@data 0078                __end_of_Record 0521                __end_of_Play_s 0F7A  
              __end_of_Option 03C9                __end_of_analog 0753           start_initialization 07ED  
                 __end_of_SPI 082A                   __end_of_STD 081F                   __end_of_Spi 06C1  
                 __end_of_mic 0046                      ??_Record 007D                      ??_Play_s 007B  
                    ??_Option 007B             __size_of_Record_s 0059                    init_fetch0 0EE4  
                    ??_analog 007D                   __pdataBANK0 0020                 __pcstackBANK0 0028  
         __end_of__stringdata 09C4             __size_of_lcd_goto 0016                      ?_Forward 0070  
     __size_of_spi_initialize 000F             __size_of_location 006C                      ?_g_erase 0070  
                    ?_e_pulse 0070                      ?_lcd_clr 0070                __size_of_Erase 006C  
              __size_of_Stand 009A                 ??_send_config 0078                __size_of_delay 0023  
              __size_of_erase 004B                     delay@data 0070                     _message1p 02E8  
                   _message1r 043B                     _message2p 0279                     _message2r 03C9  
               ??_send_string 007B                     _send_char 0F46  __size_of_uc_send_receive_spi 000D  
                   _tmr_delay 0EF5                   __stringbase 0812                   __stringdata 0832  
                  ?_message1p 0070                    ?_message1r 0070                    ?_message2p 0070  
                  ?_message2r 0070           __end_of_send_config 0F46                    ?_send_char 0070  
                    _Record_s 00DC    uc_send_receive_spi@uc_data 0070                  send_string@s 0079  
            __size_of_Forward 001D           __end_of_send_string 1000                     location@i 007C  
                  ?_tmr_delay 0070            __end_of__stringtab 0812              __size_of_g_erase 004B  
            __size_of_e_pulse 001F              __size_of_lcd_clr 0012                      __ptext10 03C9  
                    __ptext11 0135                      __ptext20 0FD9                      __ptext12 0091  
                    __ptext21 0F46                      __ptext13 0046                      __ptext22 0F19  
                    __ptext14 0753                      __ptext23 0521                      __ptext15 0F7A  
                    __ptext24 0EF5                      __ptext16 0357                      __ptext25 0EC8  
                    __ptext17 00DC                      __ptext26 0ED5                      __ptext18 0F07  
                    __ptext27 0F2F                      __ptext19 0F5D                      __ptext28 0F97  
                    __ptext29 0FB6                      _lcd_goto 0F19                 __size_of_Init 0088  
               __size_of_Play 006C                 __size_of_main 0088                      _location 01A1  
              _spi_initialize 0ED5                      init_ram0 0EE8                   _send_config 0F2F  
                 ??_message1p 007B                   ??_message1r 007B                   ??_message2p 007B  
                 ??_message2r 007B                   _send_string 0FD9        __end_of_spi_initialize 0EE4  
                 ??_send_char 0078                     stringcode 080A                   ??_tmr_delay 0072  
                    stringtab 0800           _uc_send_receive_spi 0EC8               ?_spi_initialize 0070  
